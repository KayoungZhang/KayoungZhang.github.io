<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-01-04T05:19:21.453Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 文件方法</title>
    <link href="http://example.com/2024/01/04/Python-%E6%96%87%E4%BB%B6%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2024/01/04/Python-%E6%96%87%E4%BB%B6%E6%96%B9%E6%B3%95/</id>
    <published>2024-01-04T03:03:10.000Z</published>
    <updated>2024-01-04T05:19:21.453Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-文件操作基础知识">Python 文件操作基础知识</h1><p>参考：<a href="https://www.runoob.com/python3/python3-inputoutput.html">https://www.runoob.com/python3/python3-inputoutput.html</a></p><h1 id="python-文件操作内置方法">Python 文件操作内置方法</h1><table><thead><tr class="header"><th style="text-align: left;">方法</th><th style="text-align: left;">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_close.html">f.close()</a></td><td style="text-align: left;">关闭文件。</td></tr><tr class="even"><td style="text-align: left;">f.detach()</td><td style="text-align: left;">从缓冲区返回分离的原始流（raw stream）。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_fileno.html">f.fileno()</a></td><td style="text-align: left;">从操作系统的角度返回表示流的数字。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_flush.html">f.flush()</a></td><td style="text-align: left;">刷新内部缓冲区。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_isatty.html">f.isatty()</a></td><td style="text-align: left;">返回文件流是否是交互式的。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_read.html">f.read()</a></td><td style="text-align: left;">返回文件内容。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_readable.html">f.readable()</a></td><td style="text-align: left;">返回是否能够读取文件流。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_readline.html">f.readline()</a></td><td style="text-align: left;">返回文件中的一行。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_readlines.html">f.readlines()</a></td><td style="text-align: left;">返回文件中的行列表。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_seek.html">f.seek()</a></td><td style="text-align: left;">更改文件位置。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_seekable.html">f.seekable()</a></td><td style="text-align: left;">返回文件是否允许我们更改文件位置。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_tell.html">f.tell()</a></td><td style="text-align: left;">返回当前的文件位置。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_truncate.html">f.truncate()</a></td><td style="text-align: left;">把文件调整为指定的大小。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_writeable.html">f.writeable()</a></td><td style="text-align: left;">返回是否能够写入文件。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_write.html">f.write()</a></td><td style="text-align: left;">把指定的字符串写入文件。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_file_writelines.html">f.writelines()</a></td><td style="text-align: left;">把字符串列表写入文件。</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python-文件操作基础知识&quot;&gt;Python 文件操作基础知识&lt;/h1&gt;
&lt;p&gt;参考：&lt;a href=&quot;https://www.runoob.com/python3/python3-inputoutput.html&quot;&gt;https://www.runoob.co</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="文件" scheme="http://example.com/tags/%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合方法</title>
    <link href="http://example.com/2024/01/04/Python-%E9%9B%86%E5%90%88%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2024/01/04/Python-%E9%9B%86%E5%90%88%E6%96%B9%E6%B3%95/</id>
    <published>2024-01-04T03:02:56.000Z</published>
    <updated>2024-01-04T05:15:36.153Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-集合的基础">Python 集合的基础</h1><p>参考：<a href="https://www.runoob.com/python3/python3-set.html">https://www.runoob.com/python3/python3-set.html</a></p><h1 id="python-集合内置方法">Python 集合内置方法</h1><table><thead><tr class="header"><th style="text-align: left;">方法</th><th style="text-align: left;">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_add.html">set.add()</a></td><td style="text-align: left;">向集合添加元素。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_clear.html">set.clear()</a></td><td style="text-align: left;">删除集合中的所有元素。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_copy.html">set.copy()</a></td><td style="text-align: left;">返回集合的副本。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_difference.html">set.difference()</a></td><td style="text-align: left;">返回包含两个或更多集合之间差异的集合。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_difference_update.html">set.difference_update()</a></td><td style="text-align: left;">删除此集合中也包含在另一个指定集合中的项目。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_discard.html">set.discard()</a></td><td style="text-align: left;">删除指定项目。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_intersection.html">set.intersection()</a></td><td style="text-align: left;">返回为两个其他集合的交集的集合。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_intersection_update.html">set.intersection_update()</a></td><td style="text-align: left;">删除此集合中不存在于其他指定集合中的项目。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_isdisjoint.html">set.isdisjoint()</a></td><td style="text-align: left;">返回两个集合是否有交集。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_issubset.html">set.issubset()</a></td><td style="text-align: left;">返回另一个集合是否包含此集合。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_issuperset.html">set.issuperset()</a></td><td style="text-align: left;">返回此集合是否包含另一个集合。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_pop.html">set.pop()</a></td><td style="text-align: left;">从集合中删除一个元素。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_remove.html">set.remove()</a></td><td style="text-align: left;">删除指定元素。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_symmetric_difference.html">set.symmetric_difference()</a></td><td style="text-align: left;">返回具有两组集合的对称差集的集合。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_symmetric_difference_update.html">set.symmetric_difference_update()</a></td><td style="text-align: left;">插入此集合和另一个集合的对称差集。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_union.html">set.union()</a></td><td style="text-align: left;">返回包含集合并集的集合。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_set_update.html">set.update()</a></td><td style="text-align: left;">用此集合和其他集合的并集来更新集合。</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python-集合的基础&quot;&gt;Python 集合的基础&lt;/h1&gt;
&lt;p&gt;参考：&lt;a href=&quot;https://www.runoob.com/python3/python3-set.html&quot;&gt;https://www.runoob.com/python3/pyth</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="set" scheme="http://example.com/tags/set/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典方法</title>
    <link href="http://example.com/2024/01/04/Python-%E5%AD%97%E5%85%B8%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2024/01/04/Python-%E5%AD%97%E5%85%B8%E6%96%B9%E6%B3%95/</id>
    <published>2024-01-04T03:02:39.000Z</published>
    <updated>2024-01-04T05:10:38.412Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-字典基础">Python 字典基础</h1><p>参考：<a href="https://www.runoob.com/python3/python3-dictionary.html">https://www.runoob.com/python3/python3-dictionary.html</a></p><h1 id="python-字典内置方法">Python 字典内置方法</h1><table><thead><tr class="header"><th style="text-align: left;">方法</th><th style="text-align: left;">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_dictionary_clear.html">dict.clear()</a></td><td style="text-align: left;">删除字典中的所有元素</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_dictionary_copy.html">dict.copy()</a></td><td style="text-align: left;">返回字典的副本</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_dictionary_fromkeys.html">dict.fromkeys()</a></td><td style="text-align: left;">返回拥有指定键和值的字典</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_dictionary_get.html">dict.get()</a></td><td style="text-align: left;">返回指定键的值</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_dictionary_items.html">dict.items()</a></td><td style="text-align: left;">返回包含每个键值对的元组的列表</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_dictionary_keys.html">dict.keys()</a></td><td style="text-align: left;">返回包含字典键的列表</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_dictionary_pop.html">dict.pop()</a></td><td style="text-align: left;">删除拥有指定键的元素</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_dictionary_popitem.html">dict.popitem()</a></td><td style="text-align: left;">删除最后插入的键值对</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_dictionary_setdefault.html">dict.setdefault()</a></td><td style="text-align: left;">返回指定键的值。如果该键不存在，则插入具有指定值的键。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_dictionary_update.html">dict.update()</a></td><td style="text-align: left;">使用指定的键值对字典进行更新</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_dictionary_values.html">dict.values()</a></td><td style="text-align: left;">返回字典中所有值的列表</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python-字典基础&quot;&gt;Python 字典基础&lt;/h1&gt;
&lt;p&gt;参考：&lt;a href=&quot;https://www.runoob.com/python3/python3-dictionary.html&quot;&gt;https://www.runoob.com/python3</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="dict" scheme="http://example.com/tags/dict/"/>
    
  </entry>
  
  <entry>
    <title>Python 元组方法</title>
    <link href="http://example.com/2024/01/04/Python-%E5%85%83%E7%BB%84%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2024/01/04/Python-%E5%85%83%E7%BB%84%E6%96%B9%E6%B3%95/</id>
    <published>2024-01-04T03:02:16.000Z</published>
    <updated>2024-01-04T05:11:30.951Z</updated>
    
    <content type="html"><![CDATA[<h1 id="元组基础">元组基础</h1><p>参考：<a href="https://www.runoob.com/python3/python3-tuple.html">https://www.runoob.com/python3/python3-tuple.html</a></p><h1 id="元组内置函数">元组内置函数</h1><table><thead><tr class="header"><th style="text-align: left;">方法</th><th>描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">len(tuple)</td><td>计算元组元素个数。</td></tr><tr class="even"><td style="text-align: left;">max(tuple)</td><td>返回元组中元素最大值。</td></tr><tr class="odd"><td style="text-align: left;">min(tuple)</td><td>返回元组中元素最小值。</td></tr><tr class="even"><td style="text-align: left;">tuple(iterable)</td><td>将可迭代对象转换为元组。</td></tr></tbody></table><h1 id="元组内置方法">元组内置方法</h1><table><thead><tr class="header"><th style="text-align: left;">方法</th><th style="text-align: left;">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_tuple_count.html">tuple.count()</a></td><td style="text-align: left;">返回元组中指定值出现的次数。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_tuple_index.html">tuple.index()</a></td><td style="text-align: left;">在元组中搜索指定的值并返回它被找到的位置。</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;元组基础&quot;&gt;元组基础&lt;/h1&gt;
&lt;p&gt;参考：&lt;a href=&quot;https://www.runoob.com/python3/python3-tuple.html&quot;&gt;https://www.runoob.com/python3/python3-tuple.html</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="tuple" scheme="http://example.com/tags/tuple/"/>
    
  </entry>
  
  <entry>
    <title>Python 列表方法</title>
    <link href="http://example.com/2024/01/04/Python-%E5%88%97%E8%A1%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2024/01/04/Python-%E5%88%97%E8%A1%A8%E6%96%B9%E6%B3%95/</id>
    <published>2024-01-04T03:01:52.000Z</published>
    <updated>2024-01-04T05:36:39.997Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-列表基础">Python 列表基础</h1><p>可参考：</p><p><a href="https://www.runoob.com/python3/python3-list.html">https://www.runoob.com/python3/python3-list.html</a></p><h1 id="python-列表内置函数">Python 列表内置函数</h1><table><thead><tr class="header"><th style="text-align: left;">函数</th><th style="text-align: left;">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><a href="https://www.runoob.com/python3/python3-att-list-len.html">len(list)</a></td><td style="text-align: left;">列表元素个数</td></tr><tr class="even"><td style="text-align: left;"><a href="https://www.runoob.com/python3/python3-att-list-max.html">max(list)</a></td><td style="text-align: left;">返回列表元素最大值</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://www.runoob.com/python3/python3-att-list-min.html">min(list)</a></td><td style="text-align: left;">返回列表元素最小值</td></tr><tr class="even"><td style="text-align: left;"><a href="https://www.runoob.com/python3/python3-att-list-list.html">list(seq)</a></td><td style="text-align: left;">将元组或字符串转换为列表</td></tr><tr class="odd"><td style="text-align: left;">reserved(list)</td><td style="text-align: left;">反向列表顺序，原列表顺序改变</td></tr><tr class="even"><td style="text-align: left;">sorted(list)</td><td style="text-align: left;">对列表进行排序，原列表顺序改变</td></tr></tbody></table><h1 id="python-列表内置方法">Python 列表内置方法</h1><table><thead><tr class="header"><th style="text-align: left;">方法</th><th style="text-align: left;">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_list_append.html">list.append(obj)</a></td><td style="text-align: left;">在列表的末尾添加一个元素</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_list_clear.html">list.clear()</a></td><td style="text-align: left;">删除列表中的所有元素</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_list_copy.html">list.copy()</a></td><td style="text-align: left;">返回列表的副本</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_list_count.html">list.count(obj)</a></td><td style="text-align: left;">返回指定值的元素数量。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_list_extend.html">list.extend(seq)</a></td><td style="text-align: left;">将列表元素（或任何可迭代的元素）添加到当前列表的末尾</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_list_index.html">list.index(obj)</a></td><td style="text-align: left;">返回具有指定值的第一个元素的索引</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_list_insert.html">list.insert(obj)</a></td><td style="text-align: left;">在指定位置添加元素</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_list_pop.html">list.pop(index=-1)</a></td><td style="text-align: left;">移除列表中的一个元素（默认最后一个元素），并且返回该元素的值</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_list_remove.html">list.remove(obj)</a></td><td style="text-align: left;">移除列表中某个值的第一个匹配项</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_list_reverse.html">list.reverse()</a></td><td style="text-align: left;">反向列表顺序，原列表顺序不变</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_list_sort.html">list.sort()</a></td><td style="text-align: left;">对列表进行排序，原列表顺序不变</td></tr></tbody></table><p><strong>参考链接：</strong></p><p>https://w3schools.cn/</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python-列表基础&quot;&gt;Python 列表基础&lt;/h1&gt;
&lt;p&gt;可参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.runoob.com/python3/python3-list.html&quot;&gt;https://www.runoob.com/pyt</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="list" scheme="http://example.com/tags/list/"/>
    
  </entry>
  
  <entry>
    <title>Python 内置函数和异常</title>
    <link href="http://example.com/2024/01/04/Python-%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0%E5%92%8C%E5%BC%82%E5%B8%B8/"/>
    <id>http://example.com/2024/01/04/Python-%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0%E5%92%8C%E5%BC%82%E5%B8%B8/</id>
    <published>2024-01-04T03:01:25.000Z</published>
    <updated>2024-01-04T03:50:08.031Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-内置函数">Python 内置函数</h1><p><strong>官方文档内置函数（中文）</strong>：</p><table><thead><tr class="header"><th style="text-align: left;">内置函数</th><th></th><th></th><th></th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><strong>A</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#abs">abs()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#aiter">aiter()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#all">all()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#anext">anext()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#any">any()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#ascii">ascii()</a> <strong>B</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#bin">bin()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#bool">bool()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#breakpoint">breakpoint()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#func-bytearray">bytearray()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#func-bytes">bytes()</a> <strong>C</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#callable">callable()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#chr">chr()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#classmethod">classmethod()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#compile">compile()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#complex">complex()</a> <strong>D</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#delattr">delattr()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#func-dict">dict()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#dir">dir()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#divmod">divmod()</a></td><td><strong>E</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#enumerate">enumerate()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#eval">eval()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#exec">exec()</a> <strong>F</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#filter">filter()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#float">float()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#format">format()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#func-frozenset">frozenset()</a> <strong>G</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#getattr">getattr()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#globals">globals()</a> <strong>H</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#hasattr">hasattr()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#hash">hash()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#help">help()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#hex">hex()</a> <strong>I</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#id">id()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#input">input()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#int">int()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#isinstance">isinstance()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#issubclass">issubclass()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#iter">iter()</a></td><td><strong>L</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#len">len()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#func-list">list()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#locals">locals()</a> <strong>M</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#map">map()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#max">max()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#func-memoryview">memoryview()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#min">min()</a> <strong>N</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#next">next()</a> <strong>O</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#object">object()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#oct">oct()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#open">open()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#ord">ord()</a> <strong>P</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#pow">pow()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#print">print()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#property">property()</a></td><td><strong>R</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#func-range">range()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#repr">repr()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#reversed">reversed()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#round">round()</a> <strong>S</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#func-set">set()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#setattr">setattr()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#slice">slice()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#sorted">sorted()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#staticmethod">staticmethod()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#func-str">str()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#sum">sum()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#super">super()</a> <strong>T</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#func-tuple">tuple()</a><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#type">type()</a> <strong>V</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#vars">vars()</a> <strong>Z</strong><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#zip">zip()</a> <em><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#import__">*_import*</a></em><a href="https://www.bookstack.cn/read/python-3.12.0-zh/a4e24e7dfe75b271.md#import__">()</a></td></tr></tbody></table><p><strong>第三方文档：</strong></p><table><thead><tr class="header"><th style="text-align: left;">函数</th><th style="text-align: left;">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_abs.html">abs()</a></td><td style="text-align: left;">返回数的绝对值</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_all.html">all()</a></td><td style="text-align: left;">如果可迭代对象中的所有项均为 true，则返回 True。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_any.html">any()</a></td><td style="text-align: left;">如果可迭代对象中的任何项为 true，则返回 True。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_ascii.html">ascii()</a></td><td style="text-align: left;">返回对象的可读版本。用转义字符替换 none-ascii 字符。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_bin.html">bin()</a></td><td style="text-align: left;">返回数的二进制版本。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_bool.html">bool()</a></td><td style="text-align: left;">返回指定对象的布尔值。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_bytearray.html">bytearray()</a></td><td style="text-align: left;">返回字节数组。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_bytes.html">bytes()</a></td><td style="text-align: left;">返回字节对象。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_callable.html">callable()</a></td><td style="text-align: left;">如果指定的对象是可调用的，则返回 True，否则返回 False。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_chr.html">chr()</a></td><td style="text-align: left;">返回指定 Unicode 代码中的字符。</td></tr><tr class="odd"><td style="text-align: left;">classmethod()</td><td style="text-align: left;">把方法转换为类方法。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_compile.html">compile()</a></td><td style="text-align: left;">把指定的源作为对象返回，准备执行。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_complex.html">complex()</a></td><td style="text-align: left;">返回复数。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_delattr.html">delattr()</a></td><td style="text-align: left;">从指定的对象中删除指定的属性（属性或方法）。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_dict.html">dict()</a></td><td style="text-align: left;">返回字典（数组）。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_dir.html">dir()</a></td><td style="text-align: left;">返回指定对象的属性和方法的列表。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_divmod.html">divmod()</a></td><td style="text-align: left;">当参数1除以参数2时，返回商和余数。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_enumerate.html">enumerate()</a></td><td style="text-align: left;">获取集合（例如元组）并将其作为枚举对象返回。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_eval.html">eval()</a></td><td style="text-align: left;">评估并执行表达式。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_exec.html">exec()</a></td><td style="text-align: left;">执行指定的代码（或对象）。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_filter.html">filter()</a></td><td style="text-align: left;">使用过滤器函数排除可迭代对象中的项目。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_float.html">float()</a></td><td style="text-align: left;">返回浮点数。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_format.html">format()</a></td><td style="text-align: left;">格式化指定值。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_frozenset.html">frozenset()</a></td><td style="text-align: left;">返回 frozenset 对象。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_getattr.html">getattr()</a></td><td style="text-align: left;">返回指定属性的值（属性或方法）。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_globals.html">globals()</a></td><td style="text-align: left;">以字典返回当前全局符号表。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_hasattr.html">hasattr()</a></td><td style="text-align: left;">如果指定的对象拥有指定的属性（属性/方法），则返回 True。</td></tr><tr class="even"><td style="text-align: left;">hash()</td><td style="text-align: left;">返回指定对象的哈希值。</td></tr><tr class="odd"><td style="text-align: left;">help()</td><td style="text-align: left;">执行内建的帮助系统。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_hex.html">hex()</a></td><td style="text-align: left;">把数字转换为十六进制值。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_id.html">id()</a></td><td style="text-align: left;">返回对象的 id。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_input.html">input()</a></td><td style="text-align: left;">允许用户输入。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_int.html">int()</a></td><td style="text-align: left;">返回整数。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_isinstance.html">isinstance()</a></td><td style="text-align: left;">如果指定的对象是指定对象的实例，则返回 True。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_issubclass.html">issubclass()</a></td><td style="text-align: left;">如果指定的类是指定对象的子类，则返回 True。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_iter.html">iter()</a></td><td style="text-align: left;">返回迭代器对象。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_len.html">len()</a></td><td style="text-align: left;">返回对象的长度。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_list.html">list()</a></td><td style="text-align: left;">返回列表。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_locals.html">locals()</a></td><td style="text-align: left;">返回当前本地符号表的更新字典。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_map.html">map()</a></td><td style="text-align: left;">返回指定的迭代器，其中指定的函数应用于每个项目。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_max.html">max()</a></td><td style="text-align: left;">返回可迭代对象中的最大项目。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_memoryview.html">memoryview()</a></td><td style="text-align: left;">返回内存视图（memory view）对象。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_min.html">min()</a></td><td style="text-align: left;">返回可迭代对象中的最小项目。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_next.html">next()</a></td><td style="text-align: left;">返回可迭代对象中的下一项。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_object.html">object()</a></td><td style="text-align: left;">返回新对象。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_oct.html">oct()</a></td><td style="text-align: left;">把数转换为八进制。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_open.html">open()</a></td><td style="text-align: left;">打开文件并返回文件对象。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_ord.html">ord()</a></td><td style="text-align: left;">转换表示指定字符的 Unicode 的整数。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_pow.html">pow()</a></td><td style="text-align: left;">返回 x 的 y 次幂的值。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_print.html">print()</a></td><td style="text-align: left;">打印标准输出设备。</td></tr><tr class="odd"><td style="text-align: left;">property()</td><td style="text-align: left;">获取、设置、删除属性。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_range.html">range()</a></td><td style="text-align: left;">返回数字序列，从 0 开始且以 1 为增量（默认地）。</td></tr><tr class="odd"><td style="text-align: left;">repr()</td><td style="text-align: left;">返回对象的可读版本。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_reversed.html">reversed()</a></td><td style="text-align: left;">返回反转的迭代器。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_round.html">round()</a></td><td style="text-align: left;">对数进行舍入。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_set.html">set()</a></td><td style="text-align: left;">返回新的集合对象。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_setattr.html">setattr()</a></td><td style="text-align: left;">设置对象的属性（属性/方法）。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_slice.html">slice()</a></td><td style="text-align: left;">返回 slice 对象。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_sorted.html">sorted()</a></td><td style="text-align: left;">返回排序列表。</td></tr><tr class="even"><td style="text-align: left;"><span class="citation" data-cites="staticmethod">@staticmethod</span>()</td><td style="text-align: left;">把方法转换为静态方法。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_str.html">str()</a></td><td style="text-align: left;">返回字符串对象。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_sum.html">sum()</a></td><td style="text-align: left;">对迭代器的项目进行求和。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_super.html">super()</a></td><td style="text-align: left;">返回表示父类的对象。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_tuple.html">tuple()</a></td><td style="text-align: left;">返回元组。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_type.html">type()</a></td><td style="text-align: left;">返回对象的类型。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_vars.html">vars()</a></td><td style="text-align: left;">返回对象的 <strong>dict</strong> 属性。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_zip.html">zip()</a></td><td style="text-align: left;">从两个或多个迭代器返回一个迭代器。</td></tr></tbody></table><h1 id="section"></h1><h1 id="python-内置异常">Python 内置异常</h1><p>Python中所有内置异常的基类是 <strong>BaseException</strong>，常见的内置异常有：</p><table><thead><tr class="header"><th style="text-align: left;">异常</th><th style="text-align: left;">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">ArithmeticError</td><td style="text-align: left;">数值计算发生错误时引发</td></tr><tr class="even"><td style="text-align: left;">AssertionError</td><td style="text-align: left;">在断言语句失败时引发</td></tr><tr class="odd"><td style="text-align: left;">AttributeError</td><td style="text-align: left;">属性引用或赋值失败时触发</td></tr><tr class="even"><td style="text-align: left;">Exception</td><td style="text-align: left;">所有异常的基类</td></tr><tr class="odd"><td style="text-align: left;">EOFError</td><td style="text-align: left;">当 input() 方法遇到"文件结尾"时引发条件（EOF）</td></tr><tr class="even"><td style="text-align: left;">FloatingPointError</td><td style="text-align: left;">浮点计算失败时引发</td></tr><tr class="odd"><td style="text-align: left;">GeneratorExit</td><td style="text-align: left;">在生成器关闭时引发（使用 close() 方法）</td></tr><tr class="even"><td style="text-align: left;">ImportError</td><td style="text-align: left;">当导入的模块不存在时引发</td></tr><tr class="odd"><td style="text-align: left;">IndentationError</td><td style="text-align: left;">缩进不正确时引发</td></tr><tr class="even"><td style="text-align: left;">IndexError</td><td style="text-align: left;">当序列的索引不存在时引发</td></tr><tr class="odd"><td style="text-align: left;">KeyError</td><td style="text-align: left;">在字典中不存在键时引发</td></tr><tr class="even"><td style="text-align: left;">KeyboardInterrupt</td><td style="text-align: left;">当用户按下 Ctrl+c、Ctrl+z 或 Delete 时触发</td></tr><tr class="odd"><td style="text-align: left;">LookupError</td><td style="text-align: left;">在找不到引发的错误时引发</td></tr><tr class="even"><td style="text-align: left;">MemoryError</td><td style="text-align: left;">当程序内存不足时引发</td></tr><tr class="odd"><td style="text-align: left;">NameError</td><td style="text-align: left;">当变量不存在时引发</td></tr><tr class="even"><td style="text-align: left;">NotImplementedError</td><td style="text-align: left;">当抽象方法需要继承的类来覆盖该方法时引发</td></tr><tr class="odd"><td style="text-align: left;">OSError</td><td style="text-align: left;">当系统相关操作导致错误时引发</td></tr><tr class="even"><td style="text-align: left;">OverflowError</td><td style="text-align: left;">数值计算结果过大时引发</td></tr><tr class="odd"><td style="text-align: left;">ReferenceError</td><td style="text-align: left;">当弱引用对象不存在时引发</td></tr><tr class="even"><td style="text-align: left;">RuntimeError</td><td style="text-align: left;">发生不属于任何特定期望的错误时引发</td></tr><tr class="odd"><td style="text-align: left;">StopIteration</td><td style="text-align: left;">当迭代器的 next() 方法没有更多值时引发</td></tr><tr class="even"><td style="text-align: left;">SyntaxError</td><td style="text-align: left;">发生语法错误时引发</td></tr><tr class="odd"><td style="text-align: left;">TabError</td><td style="text-align: left;">缩进包含制表符或空格时引发</td></tr><tr class="even"><td style="text-align: left;">SystemError</td><td style="text-align: left;">发生系统错误时引发</td></tr><tr class="odd"><td style="text-align: left;">SystemExit</td><td style="text-align: left;">在调用 sys.exit() 函数时引发</td></tr><tr class="even"><td style="text-align: left;">TypeError</td><td style="text-align: left;">两种不同类型组合时引发</td></tr><tr class="odd"><td style="text-align: left;">UnboundLocalError</td><td style="text-align: left;">在赋值前引用局部变量时引发</td></tr><tr class="even"><td style="text-align: left;">UnicodeError</td><td style="text-align: left;">发生 unicode 问题时引发</td></tr><tr class="odd"><td style="text-align: left;">UnicodeEncodeError</td><td style="text-align: left;">发生 unicode 编码问题时引发</td></tr><tr class="even"><td style="text-align: left;">UnicodeDecodeError</td><td style="text-align: left;">发生 unicode 解码问题时引发</td></tr><tr class="odd"><td style="text-align: left;">UnicodeTranslateError</td><td style="text-align: left;">发生 unicode 转换问题时引发</td></tr><tr class="even"><td style="text-align: left;">ValueError</td><td style="text-align: left;">在指定数据类型中存在错误值时引发</td></tr><tr class="odd"><td style="text-align: left;">ZeroDivisionError</td><td style="text-align: left;">当除法中的第二个运算符为零时引发</td></tr></tbody></table><p><strong>链接参考：</strong></p><p>https://w3schools.cn/</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python-内置函数&quot;&gt;Python 内置函数&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;官方文档内置函数（中文）&lt;/strong&gt;：&lt;/p&gt;
&lt;table&gt;

&lt;thead&gt;
&lt;tr class=&quot;header&quot;&gt;
&lt;th style=&quot;text-align</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="内置函数" scheme="http://example.com/tags/%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/"/>
    
    <category term="异常" scheme="http://example.com/tags/%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字符串方法</title>
    <link href="http://example.com/2024/01/04/Python-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2024/01/04/Python-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%B9%E6%B3%95/</id>
    <published>2024-01-04T02:30:56.000Z</published>
    <updated>2024-01-04T04:59:21.417Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python字符串基础知识">Python字符串基础知识</h1><p>可参考：</p><ul><li><p><a href="https://www.runoob.com/python3/python3-string.html">https://www.runoob.com/python3/python3-string.html</a></p></li><li><p><a href="https://w3schools.cn/python/python_strings.html">https://w3schools.cn/python/python_strings.html</a></p></li></ul><h1 id="python-字符串的内置函数">Python 字符串的内置函数</h1><table><thead><tr class="header"><th style="text-align: left;">函数</th><th style="text-align: left;">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><a href="https://www.runoob.com/python3/python3-string-len.html">len(string)</a></td><td style="text-align: left;">返回字符串长度</td></tr><tr class="even"><td style="text-align: left;"><a href="https://www.runoob.com/python3/python3-string-max.html">max(str)</a></td><td style="text-align: left;">返回字符串 str 中最大的字母。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://www.runoob.com/python3/python3-string-min.html">min(str)</a></td><td style="text-align: left;">返回字符串 str 中最小的字母。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_func_str.html">str(obj)</a></td><td style="text-align: left;">将指定的值转换为字符串</td></tr></tbody></table><h1 id="python-字符串的内置方法">Python 字符串的内置方法</h1><table><thead><tr class="header"><th style="text-align: left;">方法</th><th style="text-align: left;">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_capitalize.html">str.capitalize()</a></td><td style="text-align: left;">把首字符转换为大写。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_casefold.html">str.casefold()</a></td><td style="text-align: left;">把字符串转换为小写。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_center.html">str.center()</a></td><td style="text-align: left;">返回居中的字符串。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_count.html">str.count()</a></td><td style="text-align: left;">返回指定值在字符串中出现的次数。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_encode.html">str.encode()</a></td><td style="text-align: left;">返回字符串的编码版本。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_endswith.html">str.endswith()</a></td><td style="text-align: left;">如果字符串以指定值结尾，则返回 true。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_expandtabs.html">str.expandtabs()</a></td><td style="text-align: left;">设置字符串的 tab 尺寸。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_find.html">str.find()</a></td><td style="text-align: left;">在字符串中搜索指定的值并返回它被找到的位置。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_format.html">str.format()</a></td><td style="text-align: left;">格式化字符串中的指定值。</td></tr><tr class="even"><td style="text-align: left;">str.format_map()</td><td style="text-align: left;">格式化字符串中的指定值。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_index.html">str.index()</a></td><td style="text-align: left;">在字符串中搜索指定的值并返回它被找到的位置。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_isalnum.html">str.isalnum()</a></td><td style="text-align: left;">如果字符串中的所有字符都是字母数字，则返回 True。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_isalpha.html">str.isalpha()</a></td><td style="text-align: left;">如果字符串中的所有字符都在字母表中，则返回 True。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_isdecimal.html">str.isdecimal()</a></td><td style="text-align: left;">如果字符串中的所有字符都是小数，则返回 True。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_isdigit.html">str.isdigit()</a></td><td style="text-align: left;">如果字符串中的所有字符都是数字，则返回 True。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_isidentifier.html">str.isidentifier()</a></td><td style="text-align: left;">如果字符串是标识符，则返回 True。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_islower.html">str.islower()</a></td><td style="text-align: left;">如果字符串中的所有字符都是小写，则返回 True。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_isnumeric.html">str.isnumeric()</a></td><td style="text-align: left;">如果字符串中的所有字符都是数，则返回 True。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_isprintable.html">str.isprintable()</a></td><td style="text-align: left;">如果字符串中的所有字符都是可打印的，则返回 True。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_isspace.html">str.isspace()</a></td><td style="text-align: left;">如果字符串中的所有字符都是空白字符，则返回 True。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_istitle.html">str.istitle()</a></td><td style="text-align: left;">如果字符串遵循标题规则，则返回 True。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_isupper.html">str.isupper()</a></td><td style="text-align: left;">如果字符串中的所有字符都是大写，则返回 True。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_join.html">str.join()</a></td><td style="text-align: left;">把可迭代对象的元素连接到字符串的末尾。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_ljust.html">str.ljust()</a></td><td style="text-align: left;">返回字符串的左对齐版本。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_lower.html">str.lower()</a></td><td style="text-align: left;">把字符串转换为小写。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_lstrip.html">str.lstrip()</a></td><td style="text-align: left;">返回字符串的左修剪版本。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_maketrans.html">str.maketrans()</a></td><td style="text-align: left;">返回在转换中使用的转换表。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_partition.html">str.partition()</a></td><td style="text-align: left;">返回元组，其中的字符串被分为三部分。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_replace.html">str.replace()</a></td><td style="text-align: left;">返回字符串，其中指定的值被替换为指定的值。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_rfind.html">str.rfind()</a></td><td style="text-align: left;">在字符串中搜索指定的值，并返回它被找到的最后位置。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_rindex.html">str.rindex()</a></td><td style="text-align: left;">在字符串中搜索指定的值，并返回它被找到的最后位置。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_rjust.html">str.rjust()</a></td><td style="text-align: left;">返回字符串的右对齐版本。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_rpartition.html">str.rpartition()</a></td><td style="text-align: left;">返回元组，其中字符串分为三部分。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_rsplit.html">str.rsplit()</a></td><td style="text-align: left;">在指定的分隔符处拆分字符串，并返回列表。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_rstrip.html">str.rstrip()</a></td><td style="text-align: left;">返回字符串的右边修剪版本。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_split.html">str.split()</a></td><td style="text-align: left;">在指定的分隔符处拆分字符串，并返回列表。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_splitlines.html">str.splitlines()</a></td><td style="text-align: left;">在换行符处拆分字符串并返回列表。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_startswith.html">str.startswith()</a></td><td style="text-align: left;">如果以指定值开头的字符串，则返回 true。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_strip.html">str.strip()</a></td><td style="text-align: left;">返回字符串的剪裁版本。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_swapcase.html">str.swapcase()</a></td><td style="text-align: left;">切换大小写，小写成为大写，反之亦然。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_title.html">str.title()</a></td><td style="text-align: left;">把每个单词的首字符转换为大写。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_translate.html">str.translate()</a></td><td style="text-align: left;">返回被转换的字符串。</td></tr><tr class="odd"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_upper.html">str.upper()</a></td><td style="text-align: left;">把字符串转换为大写。</td></tr><tr class="even"><td style="text-align: left;"><a href="https://w3schools.cn/python/ref_string_zfill.html">str.zfill()</a></td><td style="text-align: left;">在字符串的开头填充指定数量的 0 值。</td></tr></tbody></table><p><span style="color:red"><strong>Note:</strong> 所有字符串方法都返回新值，不会更改原始字符串。</span></p><p><strong>参考链接：</strong></p><p>https://w3schools.cn/</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python字符串基础知识&quot;&gt;Python字符串基础知识&lt;/h1&gt;
&lt;p&gt;可参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.runoob.com/python3/python3-string.html&quot;&gt;https://ww</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="字符串" scheme="http://example.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>tkinter widgets 窗口管理</title>
    <link href="http://example.com/2024/01/02/tkinter-widgets-%E7%AA%97%E5%8F%A3%E7%AE%A1%E7%90%86/"/>
    <id>http://example.com/2024/01/02/tkinter-widgets-%E7%AA%97%E5%8F%A3%E7%AE%A1%E7%90%86/</id>
    <published>2024-01-02T02:36:14.000Z</published>
    <updated>2024-01-02T10:37:56.755Z</updated>
    
    <content type="html"><![CDATA[<p>Tkinter 多个控件被摆放到父窗口时，就需要进行布局管理（<font color="#0000FF">geometry management</font>），tkinter中提供了三种管理方法，分别如下：</p><ul><li>pack()</li></ul><p>按照控件的添加顺序从上到下依次排列，通过代码可以直观知道摆放情况。</p><ul><li>grid()</li></ul><p>以行列网格形式进行排列。</p><ul><li>place()</li></ul><p>精确指定控件的摆放位置。</p><h1 id="pack方法">pack()方法</h1><p>属性参数有：</p><table><thead><tr class="header"><th>属性</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>anchor</td><td>控件在窗口中的对齐方位："n"/"w"/"s"/"e"/"ne"/"nw"/"sw"/"se"/"center"</td></tr><tr class="even"><td><strong>expand</strong></td><td>控件是否随着窗口扩展，参数值： True / False，默认为 False</td></tr><tr class="odd"><td><strong>fill</strong></td><td>控件可在水平/垂直/同时在两个方向上进行拉伸，参数值： X/Y/BOTH/NONE</td></tr><tr class="even"><td>ipadx,ipady</td><td>控件边框与内容的距离（内边距），单位为像素</td></tr><tr class="odd"><td>padx,pady</td><td>控件之间的上下、左右的距离（外边距），单位为像素</td></tr><tr class="even"><td><strong>side</strong></td><td>控件在窗口的位置，参数值： 'top','bottom','left','right'。</td></tr></tbody></table><h1 id="grid方法">grid()方法</h1><p>属性参数有：</p><table><thead><tr class="header"><th>属性</th><th>说明</th></tr></thead><tbody><tr class="odd"><td><strong>column</strong></td><td>控件位于表格中列数，默认为第 0 列</td></tr><tr class="even"><td><strong>columnspan</strong></td><td>控件所跨的列数，默认为 1 列，通过该参数可以合并一行中多个单元格。</td></tr><tr class="odd"><td>ipadx,ipady</td><td>用于控制内边距，在单元格内部，左右、上下方向上填充指定大小的空间。</td></tr><tr class="even"><td>padx,pady</td><td>用于控制外边距，在单元格外部，左右、上下方向上填充指定大小的空间。</td></tr><tr class="odd"><td><strong>row</strong></td><td>控件位于表格中行数，默认为第 0 行</td></tr><tr class="even"><td><strong>rowspan</strong></td><td>控件所跨的行数，默认为 1 行，通过该参数可以合并一列中多个单元格。</td></tr><tr class="odd"><td><strong>sticky</strong></td><td>功能类似于 anchor，参数：N/S/W/E,即上下左右对齐，或组合使用，默认居中对齐。</td></tr></tbody></table><h1 id="place方法">place()方法</h1><p>属性参数有：</p><table><thead><tr class="header"><th>属性</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>anchor</td><td>控件在窗口中的对齐方位："n"/"w"/"s"/"e"/"ne"/"nw"/"sw"/"se"/"center"</td></tr><tr class="even"><td><strong>x,y</strong></td><td>定义控件在窗体中左上方位置</td></tr><tr class="odd"><td><strong>relx,rely</strong></td><td>相对于父窗口的位置比例，取值范围： 0.0~1.0</td></tr><tr class="even"><td>height,width</td><td>控件的高度和宽度（单位为像素）</td></tr><tr class="odd"><td><strong>relheight,relwidth</strong></td><td>相对于父窗口的大小比例，取值范围： 0.0~1.0</td></tr></tbody></table><p><span style="color:red"><strong>注意：</strong></span>在一个父窗口中，place()可以和grid()或pack()方法混合使用，但grid()和pack()方法不能混合使用。</p><p>一般在应用中使用pack()和grid()方法比较多。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Tkinter 多个控件被摆放到父窗口时，就需要进行布局管理（&lt;font color=&quot;#0000FF&quot;&gt;geometry management&lt;/font&gt;），tkinter中提供了三种管理方法，分别如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pack()&lt;/li&gt;
&lt;/ul</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="layout" scheme="http://example.com/tags/layout/"/>
    
  </entry>
  
  <entry>
    <title>Python tkinter 主窗口与控件</title>
    <link href="http://example.com/2024/01/01/Python-tkinter-%E4%B8%BB%E7%AA%97%E5%8F%A3%E4%B8%8E%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2024/01/01/Python-tkinter-%E4%B8%BB%E7%AA%97%E5%8F%A3%E4%B8%8E%E6%8E%A7%E4%BB%B6/</id>
    <published>2024-01-01T12:54:24.000Z</published>
    <updated>2024-01-02T02:29:24.800Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tkinter-主窗口">Tkinter 主窗口</h1><p>Hardware --&gt; OS --&gt; Tcl/Tk --&gt; tkinter --&gt; Python</p><p><font color="#FF33FF">tkinter module(Python 3.x --&gt; tkinter, Python 2.x --&gt; Tkinter)</font></p><p>导入 tkinter module： <code>from tkinter import *</code> or <code>import tkinter</code></p><p>创建主窗口,如: <code>window = Tk()</code> or <code>window = tkinter.Tk()</code></p><div class="code-wrapper"><pre><code class="hljs python">Tk(screenName=<span class="hljs-literal">None</span>, baseName=<span class="hljs-literal">None</span>, className=<span class="hljs-string">&#x27;Tk’, useTk=1)</span></code></pre></div><p>窗口的相关方法：</p><table><thead><tr class="header"><th>函数</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>window.title("my title")</td><td>接受一个字符串参数，为窗口起一个标题</td></tr><tr class="even"><td>window.resizable()</td><td>是否允许用户拉伸主窗口大小，默认为可更改，当设置为 resizable(0,0)或者resizable(False,False)时不可更改,help(tkinter.Tk().resizable)</td></tr><tr class="odd"><td>window.geometry("widthxheight+x+y")</td><td>设定主窗口的大小以及位置，当参数值为 None 时表示获取窗口的大小和位置信息。</td></tr><tr class="even"><td>window.quit()</td><td>关闭当前窗口</td></tr><tr class="odd"><td>window.update()</td><td>刷新当前窗口</td></tr><tr class="even"><td>window.mainloop()</td><td>设置窗口主循环，使窗口循环显示（一直显示，指导窗口被关闭）</td></tr><tr class="odd"><td>window.iconbitmap('xx.ico')</td><td>设置窗口左上角的图标（图标是.ico文件类型）</td></tr><tr class="even"><td>window.config(background ="red")</td><td>设置窗口的背景色为红色，也可以接受 16 进制的颜色值</td></tr><tr class="odd"><td>window.minsize(50,50)</td><td>设置窗口被允许调整的最小范围，即宽和高各50</td></tr><tr class="even"><td>window.maxsize(400,400)</td><td>设置窗口被允许调整的最大范围，即宽和高各400</td></tr><tr class="odd"><td>window.attributes("-alpha",0.5)</td><td>用来设置窗口的一些属性，比如透明度（-alpha）、是否置顶（-topmost）即将主屏置于其他图标之上、是否全屏（-fullscreen）全屏显示等</td></tr><tr class="even"><td>window.state("normal")</td><td>用来设置窗口的显示状态，参数值 normal（正常显示），icon（最小化），zoomed（最大化），</td></tr><tr class="odd"><td>window.withdraw()</td><td>用来隐藏主窗口，但不会销毁窗口。</td></tr><tr class="even"><td>window.iconify()</td><td>设置窗口最小化</td></tr><tr class="odd"><td>window.deiconify()</td><td>将窗口从隐藏状态还原</td></tr><tr class="even"><td>window.winfo_screenwidth() window.winfo_screenheight()</td><td>获取电脑屏幕的分辨率（尺寸）</td></tr><tr class="odd"><td>window.winfo_width() window.winfo_height()</td><td>获取窗口的大小，同样也适用于其他控件，但是使用前需要使用 window.update() 刷新屏幕，否则返回值为1</td></tr><tr class="even"><td>window.protocol("协议名",回调函数)</td><td>启用协议处理机制，常用协议有 WN_DELETE_WINDOW，当用户点击关闭窗口时，窗口不会关闭，而是触发回调函数。</td></tr></tbody></table><h1 id="tkinter常用widgets">Tkinter常用widgets</h1><table><thead><tr class="header"><th>序号</th><th>控件类型</th><th>控件名称</th><th>控件作用</th></tr></thead><tbody><tr class="odd"><td>1</td><td>Button</td><td>按钮</td><td>点击按钮时触发/执行一些事件（函数）</td></tr><tr class="even"><td>2</td><td>Canvas</td><td>画布</td><td>提供绘制图，比如直线、矩形、多边形等</td></tr><tr class="odd"><td>3</td><td>Checkbutton</td><td>复选框</td><td>多项选择按钮，用于在程序中提供多项选择框</td></tr><tr class="even"><td>4</td><td>Entry</td><td>文本框输入框</td><td>用于接收单行文本输入</td></tr><tr class="odd"><td>5</td><td>Frame</td><td>框架（容器）</td><td>定义一个窗体（根窗口也是一个窗体），用于承载其他控件，作为其他控件的容器</td></tr><tr class="even"><td>6</td><td>Label</td><td>标签</td><td>用于显示单行文本或者图片</td></tr><tr class="odd"><td>7</td><td>LabelFrame</td><td>便签框架</td><td><font color="#FFCCE5">一个简单的容器控件，常用于复杂的窗口布局。？</font></td></tr><tr class="even"><td>8</td><td>Listbox</td><td>列表框</td><td>以列表的形式显示文本</td></tr><tr class="odd"><td>9</td><td>Menu</td><td>菜单</td><td>菜单组件（下拉菜单和弹出菜单）</td></tr><tr class="even"><td>10</td><td>MenuButton</td><td>菜单按钮</td><td>用于显示菜单项</td></tr><tr class="odd"><td>11</td><td>Message</td><td>信息</td><td>用于显示多行不可编辑的文本，与 Label控件类似，增加了自动分行的功能</td></tr><tr class="even"><td>12</td><td>MessageBox</td><td>消息框</td><td>定义与用户交互的消息对话框</td></tr><tr class="odd"><td>13</td><td>OptionMenu</td><td>选项菜单</td><td>下拉菜单</td></tr><tr class="even"><td>14</td><td>PanedWindow</td><td>面板</td><td>为组件提供一个框架，允许用户自己划分窗口空间</td></tr><tr class="odd"><td>15</td><td>Radiobutton</td><td>单选框</td><td>单项选择按钮，只允许从多个选项中选择一项</td></tr><tr class="even"><td>16</td><td>Scale</td><td>进度条</td><td>定义一个线性“滑块”用来控制范围，可以设定起始值和结束值，并显示当前位置的精确值</td></tr><tr class="odd"><td>17</td><td>Spinbox</td><td>微调输入框</td><td>Entry 控件的升级版，可以通过该组件的上、下箭头选择不同的值</td></tr><tr class="even"><td>18</td><td>Scrollbar</td><td>滚动条</td><td>默认垂直方向，鼠标拖动改变数值，可以和 Text、Listbox、Canvas等控件配合使用</td></tr><tr class="odd"><td>19</td><td>Text</td><td>多行文本框</td><td>接收或输出多行文本内容</td></tr><tr class="even"><td>20</td><td>Toplevel</td><td>上层窗口</td><td>在创建一个独立于主窗口之外的子窗口，位于主窗口的上一层，可作为其他控件的容器</td></tr></tbody></table><h1 id="widgets共同属性与方法">widgets共同属性与方法</h1><table><thead><tr class="header"><th>属性名称</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>anchor</td><td>定义控件或者文字信息在窗口内的位置("n" 、"ne" 、"e" 、"se" 、"s" 、"sw" 、"w" 、"nw" 和 "center")</td></tr><tr class="even"><td>bg</td><td>bg 是 background 的缩写，用来定义控件的背景颜色，参数值可以颜色的十六进制数，或者颜色英文单词</td></tr><tr class="odd"><td>bitmap</td><td>定义显示在控件内的位图文件</td></tr><tr class="even"><td>borderwidth (bd)</td><td>定于控件的边框宽度，单位是像素</td></tr><tr class="odd"><td>command</td><td>该参数用于执行事件函数，比如单击按钮时执行特定的动作，可将执行用户自定义的函数</td></tr><tr class="even"><td>cursor</td><td>当鼠标指针移动到控件上时，定义鼠标指针的类型，字符换格式，参数值有 crosshair（十字光标）watch（待加载圆圈）plus（加号）arrow（箭头）等</td></tr><tr class="odd"><td>font</td><td>若控件支持设置标题文字，就可以使用此属性来定义，它是一个数组格式的参数 (字体,大小，字体样式)</td></tr><tr class="even"><td>fg</td><td>fg 是 foreground 的缩写，用来定义控件的前景色，也就是字体的颜色</td></tr><tr class="odd"><td>height</td><td>该参数值用来设置控件的高度，文本控件以字符的数目为高度（px），其他控件则以像素为单位</td></tr><tr class="even"><td>image</td><td>定义显示在控件内的图片文件</td></tr><tr class="odd"><td>justify</td><td>定义多行文字的排列方式，此属性可以是 LEFT/CENTER/RIGHT</td></tr><tr class="even"><td>padx/pady</td><td>定义控件内的文字或者图片与控件边框之间的水平/垂直距离</td></tr><tr class="odd"><td>relief</td><td>定义控件的边框样式，参数值为FLAT（平的）/RAISED（凸起的）/SUNKEN（凹陷的）/GROOVE（沟槽桩边缘）/RIDGE（脊状边缘）</td></tr><tr class="even"><td>text 文本</td><td>定义控件的标题文字</td></tr><tr class="odd"><td>state 状态</td><td>控制控件是否处于可用状态，参数值默认为 NORMAL/DISABLED，默认为 NORMAL（正常的）</td></tr><tr class="even"><td>width</td><td>用于设置控件的宽度，使用方法与 height 相同</td></tr><tr class="odd"><td>config(option=value)</td><td>设置属性</td></tr><tr class="even"><td>cget(''option')</td><td>取得option参数值</td></tr><tr class="odd"><td>keys()</td><td>获取该widget参数</td></tr><tr class="even"><td>quit()</td><td>python shell窗口结束，但所建窗口继续执行</td></tr><tr class="odd"><td>update()</td><td>更新窗口画面</td></tr><tr class="even"><td>bind(event, callback)</td><td>事件绑定</td></tr><tr class="odd"><td>unbind(event)</td><td>解除事件绑定</td></tr><tr class="even"><td>after(time, callback)</td><td>间隔指定时间后，调用callback()方法</td></tr></tbody></table><h1 id="tkinter.ttk模块增加的widgets">tkinter.ttk模块增加的widgets</h1><table><thead><tr class="header"><th>序号</th><th>控件类型</th><th>控件名称</th><th>控件作用</th></tr></thead><tbody><tr class="odd"><td>1</td><td>Combobox</td><td>组合框</td><td>Entry与下拉菜单组合的控件</td></tr><tr class="even"><td>2</td><td>Notebook</td><td>选项卡容器</td><td>可有多个选项卡，承载不同的子控件内容</td></tr><tr class="odd"><td>3</td><td>Progressbar</td><td>进度条</td><td>通过进度指针显示当前阶段</td></tr><tr class="even"><td>4</td><td>Separator</td><td>分割线</td><td>增加视觉效果</td></tr><tr class="odd"><td>5</td><td>Sizegrip</td><td>大小控制</td><td>拖拽更改窗口大小</td></tr><tr class="even"><td>6</td><td>Treeview</td><td>树状表格视图</td><td>将内容分层隐藏与显示</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;tkinter-主窗口&quot;&gt;Tkinter 主窗口&lt;/h1&gt;
&lt;p&gt;Hardware --&amp;gt; OS --&amp;gt; Tcl/Tk --&amp;gt; tkinter --&amp;gt; Python&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;#FF33FF&quot;&gt;tkinte</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="tkinter" scheme="http://example.com/tags/tkinter/"/>
    
  </entry>
  
  <entry>
    <title>Python基础</title>
    <link href="http://example.com/2024/01/01/Python-%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2024/01/01/Python-%E5%9F%BA%E7%A1%80/</id>
    <published>2024-01-01T09:44:15.000Z</published>
    <updated>2024-01-04T09:22:40.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python的基本知识点">Python的基本知识点</h1><ul><li><p>Python官方文档：<a href="https://docs.python.org/3/">3.12.1 Documentation (python.org)</a></p></li><li><p><a href="https://www.bookstack.cn/books/python-3.12.0-zh">Python 中文文档(全)</a></p></li><li><p>Python Shell环境输入<code>import this</code> ， 可显示Python编程的理念，简约而清晰。</p></li><li><p>注释符：</p><ul><li>单行注释：<code>#</code></li><li>多行注释：<code>'''</code> or <code>"""</code></li></ul></li><li><p><strong>ptpython</strong> 是一个增强型交互 python shell， 具有 <strong>语法高亮、自动补全、自动建议、自动缩进</strong> 等便捷功能，<code>pip install ptpython</code></p></li><li><p>Python中主要的数据结构：列表、元组、字典、集合</p></li><li><p>```python help('modules') # 查看python所有modules <div class="code-wrapper"><pre><code class="hljs bash">  - ```python  <span class="hljs-built_in">dir</span>(__builtins__)  <span class="hljs-comment"># 查看Python所有内置函数,表达式及其它对象</span>  <span class="hljs-built_in">help</span>(__builtins__) <span class="hljs-comment"># 内置函数、表达式及其它对象详细描述</span>    <span class="hljs-built_in">dir</span>(<span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-comment"># 查看内置模块字符串类方法</span>  <span class="hljs-built_in">help</span>(<span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-comment"># 字符串类详细描述</span>    <span class="hljs-built_in">dir</span>(0) <span class="hljs-comment"># 查看整数对象方法</span>  <span class="hljs-built_in">help</span>(0) <span class="hljs-comment"># 整数对象详细描述</span>    <span class="hljs-built_in">dir</span>([]) <span class="hljs-comment"># 查看列表对象的方法</span>  <span class="hljs-built_in">help</span>([]) <span class="hljs-comment"># 列表对象详细描述</span>    <span class="hljs-built_in">dir</span>(()) <span class="hljs-comment"># 查看元组对象的方法</span>  <span class="hljs-built_in">help</span>(()) <span class="hljs-comment"># 元组对象详细描述</span>    <span class="hljs-built_in">dir</span>(&#123;&#125;) <span class="hljs-comment"># 查看字典对象的方法</span>  <span class="hljs-built_in">help</span>(&#123;&#125;) <span class="hljs-comment"># 字典对象详细描述</span>    <span class="hljs-built_in">dir</span>(<span class="hljs-built_in">set</span>()) <span class="hljs-comment"># 查看集合对象的方法</span>  <span class="hljs-built_in">help</span>(<span class="hljs-built_in">set</span>()) <span class="hljs-comment"># 集合对象详细描述</span></code></pre></div></p></li><li><p>Python运算优先级：次方(**) &gt; 乘除，求余(%)，求整(//) &gt; 加减</p></li><li><p><code>divmod()</code> 函数可以一次获得商和余数</p></li><li><p><code>id()</code> 可查看变量十进制地址。</p></li><li><p><code>type()</code> 函数可列出变量的数据类型</p></li><li><p>字符串前加 <code>r</code> ,可取消转义字符含义</p></li><li><p><code>chr()</code> # 回传ASCII字符</p></li><li><p><code>ord()</code> # 回传Unicode码</p></li><li><p><code>bytes()</code> # 回传bytes数据，内容不可变</p></li><li><p><code>bytearray()</code> # 回传bytearray数据，内容可变</p></li><li><p>字符串格式输出</p><ul><li><code>print('%s - %d - %f' % (str1, num, score))</code></li><li><code>print('&#123;&#125; - &#123;&#125; - &#123;&#125;'.format(str1, num, score))</code></li><li><code>print(f'&#123;score&#125;')</code> # v3.6版本后</li></ul></li><li><p><code>eval(input(''))</code> 可处理字符串中数学表达式</p></li><li><p><code>enumerate(iterable, start = 0)</code> # 可迭代对象更改索引值</p></li><li><p><code>新列表 = [表达式 for 项目 in 可迭代对象]</code> # 生成式列表</p></li><li><p>元组内只有一个元素，在定义时要在右边加上逗号</p></li><li><p><code>zip()</code> # 对多个可迭代对象打包</p></li><li><p><code>zip(*)</code> # unzip</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python的基本知识点&quot;&gt;Python的基本知识点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Python官方文档：&lt;a href=&quot;https://docs.python.org/3/&quot;&gt;3.12.1 Documentation (python.org)&lt;/a&gt;&lt;</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>STM32CubeMX+VScode搭建STM32开发环境</title>
    <link href="http://example.com/2023/11/18/STM32CubeMX-VScode%E6%90%AD%E5%BB%BASTM32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://example.com/2023/11/18/STM32CubeMX-VScode%E6%90%AD%E5%BB%BASTM32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</id>
    <published>2023-11-18T07:19:27.000Z</published>
    <updated>2023-11-20T08:51:45.735Z</updated>
    
    <content type="html"><![CDATA[<p>市面上开发STM32使用的IDE软件有很多，像常用的 <strong>Keil</strong> 和 <strong>IAR</strong>，国外比较流行的 <strong>mikroC PRO</strong> ，以及ST公司自己推出的免费 <strong>STM32CubeIDE</strong> ，前面三款软件牵涉到版权收费问题，虽说 <strong>STM32CubeIDE</strong> 是免费的，但体积比较大，启动比较慢，所以，很多开发人员选择微软的 <strong>VSCode</strong> 来进行开发，而开发环境需要自己来进行配置，具体配置如下：</p><h2 id="下载开发软件">下载开发软件</h2><p>现在很多软件和插件对windows电脑的<font color="#FF007F"><strong>最低要求是Win10</strong></font>，所以这里以我的电脑Win10 64位来进行操作。</p><p>下载的软件有：</p><ul><li><a href="https://code.visualstudio.com/">Visual Studio Code</a></li></ul><p>主要的文本编辑软件，官网下载比较慢，可以进入 <strong><a href="https://code.visualstudio.com/updates/">Updates</a></strong> 栏进行下载。</p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231118160017135.png" alt="image-20231118160017135" style="zoom:50%;" /></p><ul><li><a href="https://www.st.com/zh/development-tools/stm32cubemx.html">STM32cubeMX</a></li></ul><p>ST推出的图形化配置工具，注册后即可下载。操作说明：<a href="https://www.stmcu.com.cn/ecosystem/Cube/STM32cubemx">生态系统 | STMCU中文官网</a></p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231118155902022.png" alt="image-20231118155902022" style="zoom:50%;" /></p><ul><li><a href="%5BArm%20GNU%20Toolchain%20Downloads%20–%20Arm%20Developer%5D(https://developer.arm.com/downloads/-/arm-gnu-toolchain-downloads)">arm-gnu-toolchain</a></li></ul><p>Windows (mingw-w64-i686)下交叉编译工具链，主要使用里面的gcc工具链。</p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231118155746858.png" alt="image-20231118155746858" style="zoom:50%;" /></p><ul><li><a href="https://www.gnutoolchains.com/arm-eabi/openocd/">OpenOCD</a></li></ul><p>开源的GDB调试软件。</p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231118160350697.png" alt="image-20231118160350697" style="zoom:50%;" /></p><ul><li><a href="https://gnuwin32.sourceforge.net/packages/make.htm">GNU make</a></li></ul><p>工程的构建工具，通过 <strong>makefile</strong> 脚本文件，自动进行编译处理过程。</p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231118160902580.png" alt="image-20231118160902580" style="zoom:50%;" /></p><h1 id="软件安装与环境变量配置">软件安装与环境变量配置</h1><p><strong>VS Code</strong> 和 <strong>STM32CubeMX</strong> 及 <strong>GNU make</strong> 按照正常方式安装即可，<strong>arm-gnu-toolchain</strong> 和 <strong>OpenOCD</strong> 是压缩包，将它们解压到某个盘（如：<strong>D:\Program Files (x86)文件夹下</strong>）， 然后将它们的<font color="#FF00FF"><strong>bin文件夹路径</strong></font>添加到环境变量的<strong>PATH</strong>中。</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231118161850553.png" alt="" /><figcaption>image-20231118161850553</figcaption></figure><h1 id="vs-code插件安装">VS Code插件安装</h1><p>打开 <strong>VS code</strong> ，安装以下插件：</p><ul><li><strong>C/C++</strong></li></ul><p>VS code中对C和C++的支持</p><ul><li><strong>Cortex-Debug</strong></li></ul><p>调试功能，支持寄存器查看、内存查看、断点调试、变量观察等功能。</p><ul><li><strong>stm32-for-vscode</strong></li></ul><p>编译、调试和烧录STM32项目的扩展，自动完成 <strong>.vscode文件夹</strong> json文件的编写。</p><ul><li><strong>aiXcoder Code Completer 或 Tabnine</strong></li></ul><p>代码提示扩展</p><h1 id="创建stm32-hal工程">创建STM32 HAL工程</h1><p>通过STM32CubeMX新建一个工程，正常创建即可，只需要注意选择工具链为 <strong><font color="#FF3333">Makefile</font></strong></p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231118163633024.png" alt="image-20231118163633024" style="zoom:67%;" /></p><h1 id="vs-code编译下载">VS Code编译下载</h1><p>进入刚刚创建的STM32工程文件夹，使用VS Code打开文件夹。</p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231118164336856.png" alt="image-20231118164336856" style="zoom:67%;" /></p><p>工程打开后，左侧会出现 <strong>stm32-for-vscode</strong> 插件，如果环境变量配置OK，它会自动进行适配，如下：</p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231118165358844.png" alt="image-20231118165358844" style="zoom:50%;" /></p><p>如果没有出现以上画面，则需要自己进入插件设置，进行路径的配置。</p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231118165049806.png" alt="image-20231118165049806" style="zoom:50%;" /></p><p>点击 <strong>Build</strong> ，即可看到 <strong>TERMINAL</strong> 栏的编译过程，如果一切正常，最终会生成hex和bin文件。</p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231118165612525.png" alt="image-20231118165612525" style="zoom:80%;" /></p><p>需要烧录程序时，因为默认的烧录器是 <strong>stlink</strong>， 我这里是 <strong>daplink</strong> ，点击 <strong>Change Programmer</strong> ，选择 <strong>daplink</strong> ，插上烧录器，上电，然后点击 <strong>Flash STM32</strong> 即可完成程序的下载。</p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231118170208735.png" alt="image-20231118170208735" style="zoom:67%;" /></p><p>至于调试，点击 <strong>Debug STM32</strong> ，弹出调试界面，进行openocd的调试即可， 好了，以上就是 VS code 开发STM32环境的搭建过程。</p><p>另外，在keil中调用printf 需要重载<code>putc</code>函数，这里因为使用的是gcc编译器，所以需要重载 <code>_write</code> 函数：</p><div class="code-wrapper"><pre><code class="hljs c"><span class="hljs-type">int</span> _write(<span class="hljs-type">int</span> fd, <span class="hljs-type">char</span> *ch, <span class="hljs-type">int</span> len)&#123;  HAL_UART_Transmit(&amp;huart1, (<span class="hljs-type">uint8_t</span>*)ch, len, <span class="hljs-number">0xFFFF</span>);  <span class="hljs-keyword">return</span> len;&#125;</code></pre></div><p><strong>参考链接：</strong></p><p><a href="https://blog.csdn.net/gorgeousa/article/details/129525234">vscode stm32cubemx 优雅开发stm32，最简单步骤教程_vscode怎么开发stm32_合理说明的博客-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;市面上开发STM32使用的IDE软件有很多，像常用的 &lt;strong&gt;Keil&lt;/strong&gt; 和 &lt;strong&gt;IAR&lt;/strong&gt;，国外比较流行的 &lt;strong&gt;mikroC PRO&lt;/strong&gt; ，以及ST公司自己推出的免费 &lt;strong&gt;STM32C</summary>
      
    
    
    
    <category term="stm32" scheme="http://example.com/categories/stm32/"/>
    
    
    <category term="stm32" scheme="http://example.com/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>锂电池充放电方案</title>
    <link href="http://example.com/2023/11/16/%E9%94%82%E7%94%B5%E6%B1%A0%E5%85%85%E6%94%BE%E7%94%B5%E6%96%B9%E6%A1%88/"/>
    <id>http://example.com/2023/11/16/%E9%94%82%E7%94%B5%E6%B1%A0%E5%85%85%E6%94%BE%E7%94%B5%E6%96%B9%E6%A1%88/</id>
    <published>2023-11-16T12:55:49.000Z</published>
    <updated>2023-11-16T14:34:12.990Z</updated>
    
    <content type="html"><![CDATA[<p>对于便携式设备来讲，锂电池作为电源，在应用中必不可少，一般锂电池标称电压3.7V,充满电后4.2V，我们在设计锂电池充放电功能的时候需要考虑其保护电路、充电电路、电量检测电路、电源转换电路。</p><h1 id="保护电路的设计">保护电路的设计</h1><p>锂电池保护电路主要过充和过放保护，使用集成芯片对锂电池进行保护，如深圳富满的 <strong>DW03D芯片</strong>，它具有过充，过放，过流，短路等所有电池所需保护功能，采用TSSOP-8封装，面积占用小，外围电路也非常简单。</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116211206743.png" alt="" /><figcaption>image-20231116211206743</figcaption></figure><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116211127222.png" alt="" /><figcaption>image-20231116211127222</figcaption></figure><p>这是消费电子产品中常用的锂电池保护芯片，还有其它保护芯片，一般电池都自带有保护电路，为了方便，选用时可选带有保护电路的锂电池。</p><h1 id="充电电路的设计">充电电路的设计</h1><p>锂电池充电芯片非常多，有TI、ADI、MPS这些大厂的充电芯片，国内也有很多充电芯片，像南京拓品微、上海贝岭、深圳富满电子、英集芯等。这些充电芯片有的也包含有保护电路的部分。</p><ul><li><strong>充电电流小</strong></li></ul><p>如果充电电流较小，可以选用 <strong>线性充电芯片</strong>，比如 <strong>TP4056、TC4056、TC4054</strong> 等，这类充电芯片最大电流1A，外围电路简单，但发热比较大。</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116213108065.png" alt="" /><figcaption>image-20231116213108065</figcaption></figure><ul><li><strong>充电电流大</strong></li></ul><p>如果充电电流较大，就必须要用 <strong>开关降压型芯片</strong>，这类芯片充电电流大，可达2A或更高，但发热量小，典型的有 <strong>TP5000、IP5306</strong> 等。</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116213150850.png" alt="" /><figcaption>image-20231116213150850</figcaption></figure><h1 id="电量检测电路设计">电量检测电路设计</h1><p>在使用的时候需要对电池的电量做检测，防止设备欠压，出现故障。</p><ul><li><strong>电阻分压的方案</strong></li></ul><p>对电池电压使用分压电阻分压，然后直接使用AD进行检测，根据其一个周期的放电曲线和AD值计算出简单的电量，这种方法成本低。（<a href="https://blog.csdn.net/switch_love_case/article/details/113553837">低功耗产品ADC精确测量电池电压（电量）_adc电池电量采集</a>）</p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116215139377.png" alt="image-20231116215139377" style="zoom: 67%;" /></p><ul><li><strong>芯片方案</strong></li></ul><p>使用专业的库仑计IC检测电量，这类芯片通过I2C总线来传输电量信息，检测比较准确，如<strong>TI的BQ27541</strong>、<strong>美信的MAX17043</strong>、还有<strong>凌特的LTC2644</strong>，国内的如大疆和智能手机都在使用的 <strong>CW2015</strong> 。</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116220010964.png" alt="" /><figcaption>image-20231116220010964</figcaption></figure><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116220316629.png" alt="" /><figcaption>image-20231116220316629</figcaption></figure><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116220534950.png" alt="" /><figcaption>image-20231116220534950</figcaption></figure><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116220550595.png" alt="" /><figcaption>image-20231116220550595</figcaption></figure><h1 id="电源转换电路的设计">电源转换电路的设计</h1><p>电池供电一般都比较小，要给后端设备提供稳定的电压，就需要进行转换处理。</p><ul><li><strong>PMIC电池电源管理</strong></li></ul><p>在一些复杂的设备中，一般会有一颗PMIC电池电源管理芯片，这类芯片集成了多路DCDC、多路LDO、电源路径管理、锂电池充放电管理，锂电池电量检测等。一般多数情况下使用不到。如ST的 <strong>STPMIC1</strong></p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116221514278.png" alt="" /><figcaption>image-20231116221514278</figcaption></figure><ul><li><strong>升降压转换</strong></li></ul><p>使用升压或降压芯片对锂电池电压进行处理。</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116221733398.png" alt="" /><figcaption>image-20231116221733398</figcaption></figure><ul><li><strong>充电升压一体集成芯片</strong></li></ul><p>用集成的充电和升压一体IC进行升压，然后使用DCDC进行降压，如 <strong>TP5400、IP5109、IP5318、IP5306</strong> 等。这类IC有放电保护，一般放电截止电压在3V左右。</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116222607678.png" alt="" /><figcaption>image-20231116222607678</figcaption></figure><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116222628162.png" alt="" /><figcaption>image-20231116222628162</figcaption></figure><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116222937890.png" alt="" /><figcaption>image-20231116222937890</figcaption></figure><p>锂电池相关的芯片有很多，对于产品不同的需求，可根据应用进行不同的取舍，有的芯片在使用过程中，也会出现各种问题，所以，在选择时也需要认真考虑。</p><p><strong>参考链接：</strong></p><p><a href="https://mp.weixin.qq.com/s/WkLsDG0sdHt2pWuwGOsb6g">折腾一下锂电池供电方案 (qq.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;对于便携式设备来讲，锂电池作为电源，在应用中必不可少，一般锂电池标称电压3.7V,充满电后4.2V，我们在设计锂电池充放电功能的时候需要考虑其保护电路、充电电路、电量检测电路、电源转换电路。&lt;/p&gt;
&lt;h1 id=&quot;保护电路的设计&quot;&gt;保护电路的设计&lt;/h1&gt;
&lt;p&gt;锂电</summary>
      
    
    
    
    <category term="硬件" scheme="http://example.com/categories/%E7%A1%AC%E4%BB%B6/"/>
    
    
    <category term="锂电池" scheme="http://example.com/tags/%E9%94%82%E7%94%B5%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>批量获取微信公众号的历史消息</title>
    <link href="http://example.com/2023/11/16/%E6%89%B9%E9%87%8F%E8%8E%B7%E5%8F%96%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E7%9A%84%E5%8E%86%E5%8F%B2%E6%B6%88%E6%81%AF/"/>
    <id>http://example.com/2023/11/16/%E6%89%B9%E9%87%8F%E8%8E%B7%E5%8F%96%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E7%9A%84%E5%8E%86%E5%8F%B2%E6%B6%88%E6%81%AF/</id>
    <published>2023-11-16T06:43:13.000Z</published>
    <updated>2023-11-16T08:11:10.395Z</updated>
    
    <content type="html"><![CDATA[<p>微信公众号历史文章有很多，不想总是不停一篇一篇滑动浏览，然后在网上找到了一种提取方法：<strong>Python爬虫+Fiddler抓取</strong> 。具体操作如下：</p><h2 id="下载项目源码">下载项目源码</h2><p>项目地址：</p><div class="code-wrapper"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/LeLe86/</span>vWeChatCrawl.git</code></pre></div><p><font color="#FF0000">前提是电脑安装有<strong>python软件</strong></font>，打开 <code>git bash</code> 下载项目源码：</p><div class="code-wrapper"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/LeLe86/</span>vWeChatCrawl.git</code></pre></div><h2 id="安装python包">安装python包</h2><p>在 <code>git bash</code> 中，输入</p><div class="code-wrapper"><pre><code class="hljs c">cd vWeChatCrawlpython setupPackage.py</code></pre></div><p>等待安装完成。</p><h2 id="安装fiddler抓包工具">安装Fiddler抓包工具</h2><p><a href="https://www.telerik.com/fiddler/fiddler-classic">Fiddler的官网</a>有时会连不上，可去 <strong>pc.qq.com</strong> 搜索 <strong>Fiddler4</strong> 下载并安装。</p><h2 id="fiddler软件设置">Fiddler软件设置</h2><p>打开Fiddler软件，设置如下：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116152054397.png" alt="" /><figcaption>image-20231116152054397</figcaption></figure><p>然后在主窗口右侧选择 <strong>Filters</strong>，在需要填的URL为：<code>mp.weixin.qq.com/mp/profile_ext?action=getmsg</code> ,如下图所示：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116152400300.png" alt="" /><figcaption>image-20231116152400300</figcaption></figure><p>点软件左下角的方块，会显示 <strong>Capturing</strong> ，表示它此时处在抓取数据的状态，再点一下会停止抓取。</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116152722265.png" alt="" /><figcaption>image-20231116152722265</figcaption></figure><h2 id="获取公众号历史消息">获取公众号历史消息</h2><p>登录电脑端微信，我这里版本（<strong>V2.9.5.41</strong>），选择一个公众号，查看历史消息，如：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116152851584.png" alt="" /><figcaption>image-20231116152851584</figcaption></figure><p>进入后缓慢向下滑动，页面显示 <strong>正在加载</strong> ，即可看到抓包软件捕捉到信息。</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116153410980.png" alt="" /><figcaption>image-20231116153410980</figcaption></figure><p>把这些json文件保存下来，</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116154034375.png" alt="" /><figcaption>image-20231116154034375</figcaption></figure><h2 id="下载文章html或pdf文档">下载文章html或pdf文档</h2><p>打开项目中的 <strong>config.json</strong> 文件，进行设置并保存。</p><ul><li><strong>jsonDir</strong>：上面在Fiddler中保存的文件目录<br /></li><li><strong>htmlDir</strong>：保存html的目录，路径中不能有空格<br /></li><li><strong>pdfDir</strong>：保存pdf的目录，路径中不能有空格</li></ul><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116154743433.png" alt="" /><figcaption>image-20231116154743433</figcaption></figure><p>一般只需要设置 <strong>jsonDir</strong> ，另外两个默认即可。</p><p>设置完成后，在 <code>git bash</code> 中， 运行 <code>python start.py</code> ,即可下载html文件，等待下载完成，可看到html文件夹下的html文件和imsges文件夹，但这种html文件都是以数字命名的，查看不方便，所以，可以运行 <code>python start.py pdf</code> ,等待全部转化成pdf文件即可，后面就可以离线查看各个文章了。</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116160112140.png" alt="" /><figcaption>image-20231116160112140</figcaption></figure><p>以上就是分享的全部内容，这中间试了很多爬虫方式，找了很多第三方工具，都没法提取，在本项目实施过程中也并非一帆风顺，碰到了各种莫名其妙的问题，折腾好久，但最终都一一解决了，在此记录一下。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;微信公众号历史文章有很多，不想总是不停一篇一篇滑动浏览，然后在网上找到了一种提取方法：&lt;strong&gt;Python爬虫+Fiddler抓取&lt;/strong&gt; 。具体操作如下：&lt;/p&gt;
&lt;h2 id=&quot;下载项目源码&quot;&gt;下载项目源码&lt;/h2&gt;
&lt;p&gt;项目地址：&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="其它" scheme="http://example.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>关于Fiddler系统代理总是被更改的issue</title>
    <link href="http://example.com/2023/11/16/%E5%85%B3%E4%BA%8EFiddler%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%90%86%E6%80%BB%E6%98%AF%E8%A2%AB%E6%9B%B4%E6%94%B9%E7%9A%84issue/"/>
    <id>http://example.com/2023/11/16/%E5%85%B3%E4%BA%8EFiddler%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%90%86%E6%80%BB%E6%98%AF%E8%A2%AB%E6%9B%B4%E6%94%B9%E7%9A%84issue/</id>
    <published>2023-11-16T03:31:27.000Z</published>
    <updated>2023-11-16T04:26:03.869Z</updated>
    
    <content type="html"><![CDATA[<p>在使用Fiddler Web Debugger抓取网页内容时，会经常弹出如下错误：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116113625585.png" alt="" /><figcaption>image-20231116113625585</figcaption></figure><p>在网上看到很多人都碰到有这个问题，产生的原因也有多种，我把这些可能得原因都看了看，排除了自己电脑可能的问题，但还是没法解决。</p><p>突然想到一个博主说的：“一定有一个程序在修改系统的代理”，问题的关键就在于其它软件的影响，于是，从网上下载了 <code>Process Monitor(进程监测软件)</code>(<font color="purple">Win7系统无法使用新版本,我这里使用的是V3.2版本</font>)，通过监测软件搜索 <code>ProxyEnable</code> ,说不定就可以揪出作怪的进程。操作如下：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116121107282.png" alt="" /><figcaption>image-20231116121107282</figcaption></figure><p>明明我多年前都卸载了这个网银助手软件，也完整看了卸载软件列表中，没有网银或VPN的相关信息，但现在系统中还是残留有网银的进程，折腾了许久，原来是这个潜藏进程的影响。</p><p>此时是没法直接删除这个进程的，双击这个网银的软件，打开任务管理器，找到这个网银进程，结束它的进程，再直接删除，OK。</p><p>再次在 <strong>Fiddler</strong> 软件中，开启捕捉，就不会弹出系统代理更改的错误，问题解决。</p><p><strong>参考：</strong></p><p><a href="https://blog.csdn.net/zwyzzz888/article/details/126426761">解决fiddler 系统代理已更改的问题-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在使用Fiddler Web Debugger抓取网页内容时，会经常弹出如下错误：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231116</summary>
      
    
    
    
    <category term="其它" scheme="http://example.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>网页布局调整插件</title>
    <link href="http://example.com/2023/11/13/%E7%BD%91%E9%A1%B5%E5%B8%83%E5%B1%80%E8%B0%83%E6%95%B4%E6%8F%92%E4%BB%B6/"/>
    <id>http://example.com/2023/11/13/%E7%BD%91%E9%A1%B5%E5%B8%83%E5%B1%80%E8%B0%83%E6%95%B4%E6%8F%92%E4%BB%B6/</id>
    <published>2023-11-13T06:49:19.000Z</published>
    <updated>2023-11-13T08:02:22.969Z</updated>
    
    <content type="html"><![CDATA[<p>浏览网页时，一般网页上会出现很多附带花哨的内容，看起来很影响视觉效果，且都是些无用信息，网上看到个博主写了个网页插件，使用后，屏蔽了这些无用信息，整个页面看起来清爽很多。</p><p>插件GitHub地址：</p><div class="code-wrapper"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/Camio1945/</span>adjust_website_chrome_extension</code></pre></div><p>插件屏蔽了指定网页上大部分内容，可以根据自己的需要进行相应的修改和调整。虽然插件是用在谷歌浏览器上的，但我的Microsoft Edge浏览器好像也能正常使用，以下是我调整修改后CSDN网页上的显示：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231113154847896.png" alt="" /><figcaption>image-20231113154847896</figcaption></figure><p>调整修改后的插件，我已上传：<a href="https://gitee.com/kayoungzhang/my_codehub/blob/master/plugins/adjust_website%E6%8F%92%E4%BB%B6.zip">gitee</a></p><p>具体内容，请查看原插件说明文档，感兴趣的可以下载来使用看看，并根据自己的需要进行修改调整。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;浏览网页时，一般网页上会出现很多附带花哨的内容，看起来很影响视觉效果，且都是些无用信息，网上看到个博主写了个网页插件，使用后，屏蔽了这些无用信息，整个页面看起来清爽很多。&lt;/p&gt;
&lt;p&gt;插件GitHub地址：&lt;/p&gt;
&lt;div class=&quot;code-wrapper&quot;&gt;</summary>
      
    
    
    
    <category term="其它" scheme="http://example.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>typora插件</title>
    <link href="http://example.com/2023/11/10/typora%E6%8F%92%E4%BB%B6/"/>
    <id>http://example.com/2023/11/10/typora%E6%8F%92%E4%BB%B6/</id>
    <published>2023-11-10T07:20:16.000Z</published>
    <updated>2023-11-13T06:42:14.383Z</updated>
    
    <content type="html"><![CDATA[<p>在写 <code>markdown</code> 文档时，有时需要对文档进行格式处理，如字体大小，颜色设置，加粗等等，像在typora软件中，会有部分设置类型，通过鼠标右键或快捷键的方式可以很方便的操作，但有些常用的一些格式设置，软件中就没有。如果你懂些html的语法，也可以进行设置，在之前的文章中有分享，但总归感觉不太方便。</p><p>前段时间，在 <code>github</code> 上看到个typora插件（<a href="https://github.com/obgnail/typora_plugin">https://github.com/obgnail/typora_plugin</a>），在使用软件时，增加了很多功能，有些功能也比较实用。</p><p>使用之后，我发现有些增强功能我使用不到，typora软件的打开速度也变慢了，通过插件里面的配置文档，我删除了插件里面的部分增强功能，对自己经常用到的功能进行了更改和保留。如下所示：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231113143517868.png" alt="" /><figcaption>image-20231113143517868</figcaption></figure><ul><li><strong>只读模式 Ctrl+Shift+R</strong></li></ul><p>使用鼠标右键或快捷键 <code>Ctrl+Shift+R</code> 可以快速进入或退出<strong>只读模式</strong>，<strong>只读模式</strong>下，无法编辑，且文章右下角显示只读标志。</p><ul><li><strong>表格调整</strong></li></ul><p>创建表格后，使用 <code>ctrl+鼠标拖动</code> 可以修改表格的行高列宽。</p><ul><li><strong>文字颜色 Ctrl+Shift+C</strong></li></ul><p>使用鼠标右键或快捷键 <code>Ctrl+Shift+C</code> 可以弹出或退出文字颜色设置框，选中需要改变颜色的文字，即可进行颜色的设置。</p><ul><li><strong>右键菜单</strong></li></ul><p>这个主要是打开配置文件夹和github上的帮助文档。</p><ul><li><strong>白天/暗夜模式切换</strong></li></ul><p>文档右下角直接有 <strong>白天/暗夜模式切换</strong> 图标，鼠标左键点击即可进行不同模式的切换，比较实用。</p><ul><li><strong>快读返回顶底部</strong></li></ul><p>文档右下角直接有 <strong>快速返回顶/底部</strong> 图标，对于长文档的阅读，比较方便快捷。</p><p>以上就是我写文档会经常使用到的一些功能，已上传到<a href="https://gitee.com/kayoungzhang/my_codehub/blob/master/plugins/typora%E6%8F%92%E4%BB%B6%E7%B2%BE%E7%AE%80%E7%89%88.zip">gitee</a>，至于其它的功能，可以参考<a href="https://github.com/obgnail/typora_plugin">原插件</a>，感兴趣可以下载下来使用看看。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在写 &lt;code&gt;markdown&lt;/code&gt; 文档时，有时需要对文档进行格式处理，如字体大小，颜色设置，加粗等等，像在typora软件中，会有部分设置类型，通过鼠标右键或快捷键的方式可以很方便的操作，但有些常用的一些格式设置，软件中就没有。如果你懂些html的语法，也可</summary>
      
    
    
    
    <category term="其它" scheme="http://example.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
    <category term="typora" scheme="http://example.com/tags/typora/"/>
    
  </entry>
  
  <entry>
    <title>热敏电阻原理与代码实现</title>
    <link href="http://example.com/2023/10/25/%E7%83%AD%E6%95%8F%E7%94%B5%E9%98%BB%E5%8E%9F%E7%90%86%E4%B8%8E%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/"/>
    <id>http://example.com/2023/10/25/%E7%83%AD%E6%95%8F%E7%94%B5%E9%98%BB%E5%8E%9F%E7%90%86%E4%B8%8E%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/</id>
    <published>2023-10-25T07:29:47.000Z</published>
    <updated>2023-10-26T10:11:18.617Z</updated>
    
    <content type="html"><![CDATA[<p>在嵌入式产品开发中，会经常碰到温度检测的时候，在成本比较敏感而精度要求较低时，可采用热敏电阻来进行温度的检测。</p><h1 id="热敏电阻简介">热敏电阻简介</h1><p>热敏电阻作用有点像电阻器，但对温度比较敏感。它可用于产生随环境温度变化的模拟输出电压，这是因为由于热量变化会导致其电气特性发生变化。随着它的温度变化，它的电阻也会发生变化。</p><p>热敏电阻的主要用途是作为电阻式温度传感器，但它们也可以用作热敏限流器件。</p><p>随着温度的变化增加，电阻值有的是增大，有的是减小。所以对应了两种类型的热敏电阻：<strong>电阻的负温度系数（NTC）和电阻的正温度系数（PTC）。</strong>工程应用中，NTC热敏电阻使用更广泛一些，下面主要来看看NTC的相关内容。</p><h1 id="ntc的功能概述">NTC的功能概述</h1><p>NTC的性性是阻值随温度的升高而降低，变化率极大的半导体电阻器。NTC的电阻与温度存在如下关系曲线：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231026113905028.png" alt="" /><figcaption>image-20231026113905027</figcaption></figure><p>对于NTC的这种电阻与温度的关系可以使用近似的公式来表示：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231026114506698.png" alt="" /><figcaption>image-20231026114506699</figcaption></figure><p>其中：</p><p><strong>R</strong>: 当前温度（K）零负荷电阻</p><p><strong>T：</strong> 当前温度（K）</p><p><strong>R0:</strong> T0(K)温度下标称电阻，一般是25℃。</p><p><strong>B:</strong> 热敏电阻材料常数，标称温度不同，B值也不同</p><p>有的NTC厂商会给出B值公式，只是上面那个公式的不同转换形式而已：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231026120408078.png" alt="" /><figcaption>image-20231026120408077</figcaption></figure><p>由以上公式就可以推出温度与电阻的关系（<strong>℃</strong>）：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/72ac09cc4e50c51a63870bf9401d3a51.png" alt="" /><figcaption>img</figcaption></figure><h1 id="电路原理及程序实现">电路原理及程序实现</h1><p>热敏电阻的本质就是一个电阻，我们通过测量电阻的变化即可测量出来温度。最简单的方法是使用热敏电阻作为分压电路的一部分，测量电阻两端的电压变化，就可以得出温度的变化。</p><p>将电压值转变为对应的温度值，一般有两种方法：<strong>查表法</strong>和<strong>公式计算法（如上公式）</strong>，比较常用的是查表法。</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231026174558208.png" alt="" /><figcaption>image-20231026174558207</figcaption></figure><p>可以看出，只要知道了当前的电阻，就可以得出ADC的值，以<a href="https://atta.szlcsc.com/upload/public/pdf/source/20170728/C123387_1501225826403848951.pdf">南京时恒的MF58-103F3435</a>为例：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231026173537979.png" alt="" /><figcaption>image-20231026173537976</figcaption></figure><p>由上图可以看出，每个温度下都有对应的电阻值，通过上面的公式，就可以计算出对应的电阻值下的ADC采集值。</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/641.png" alt="" /><figcaption>图片</figcaption></figure><p>将所有AD值转换为HEX格式后，保存到一个一维数组中：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/640-16983137350834.png" alt="" /><figcaption>图片</figcaption></figure><p>然后用单片机采集到的AD值，一个个从头开始去查找对比就能知道温度了。（由于AD值是按照由大到小的顺序排列的，可以采用更高效的二分法查找，这里不再赘述）</p><p>单片机采集到的AD值一般落在了某个区间，所以要处理的数据基本上在两个温度的区间，如果要显示小数，两个温度区间可以看成是线性的，通过局部线性化就可以计算出温度的值。</p><p>什么是局部线性化，有网友解释的很清楚，这里直接搬过来，假如ADC采样的数字量为 0x80C，十进制是2060，对应在数据表的2048(25℃)和2095(24℃)中间，计算方式按照线性处理如下：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/640-16983137798156.png" alt="" /><figcaption>图片</figcaption></figure><div class="code-wrapper"><pre><code class="hljs c"><span class="hljs-type">uint16_t</span> ntc_ad;<span class="hljs-type">uint16_t</span> temp_index;<span class="hljs-type">float</span> temperature = <span class="hljs-number">0.0</span>;ntc_ad = GetADCResult();<span class="hljs-comment">//获取ADC值</span>temp_index = NTCADBinarySearch(ntc_ad);<span class="hljs-comment">//搜索NTC_AD温度表（得到数组标号）</span>temp_integer = temp_index - <span class="hljs-number">30</span>; <span class="hljs-comment">//最低温度-30℃</span>temperature = temp_integer+(<span class="hljs-type">float</span>)(NTC_AD[temp]-ntc_ad)/(<span class="hljs-type">float</span>)(NTC_AD[temp]-NTC_AD[temp+<span class="hljs-number">1</span>]);temperature = temperature * <span class="hljs-number">10</span>;</code></pre></div><p><strong>参考链接：</strong></p><p><a href="https://mp.weixin.qq.com/s/9gCKO-IeI86xJqkxHSZyNg">热敏电阻测温：原理讲解（附送电路图和程序） (qq.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在嵌入式产品开发中，会经常碰到温度检测的时候，在成本比较敏感而精度要求较低时，可采用热敏电阻来进行温度的检测。&lt;/p&gt;
&lt;h1 id=&quot;热敏电阻简介&quot;&gt;热敏电阻简介&lt;/h1&gt;
&lt;p&gt;热敏电阻作用有点像电阻器，但对温度比较敏感。它可用于产生随环境温度变化的模拟输出电压，这</summary>
      
    
    
    
    <category term="单片机" scheme="http://example.com/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="NTC" scheme="http://example.com/tags/NTC/"/>
    
  </entry>
  
  <entry>
    <title>RS485总结</title>
    <link href="http://example.com/2023/10/25/RS485%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2023/10/25/RS485%E6%80%BB%E7%BB%93/</id>
    <published>2023-10-25T07:28:43.000Z</published>
    <updated>2023-10-26T02:51:47.059Z</updated>
    
    <content type="html"><![CDATA[<p>RS485是工业自动化控制上最常用的半双工通信总线之一，它弥补了RS-232通信距离短，速率低的缺点，它的速率可高达<strong>10Mbit/s</strong>，理论通讯距离可达<strong>1200米</strong>；RS-485采用的是<strong>差分传输</strong>，可抑制总线上的共模干扰。RS485通信只需要MCU有串口就可以使用了。</p><h1 id="rs485通信协议">RS485通信协议</h1><p><strong>RS485是硬件层协议</strong>，MCU管脚输出的是TTL电平，经过485通讯转换器芯片转换成差分信号（线A、线B），然后跟RS485相关设备进行通信。可以这样理解，硬件层协议是公路，目的是为了让车辆能够正常通行。如果想让它按照自己的意愿在某个车道运行，就需要交通规则进行约束了，对应RS485上，就需要上层协议的加入，<strong>即软件层协议</strong>，如常用的Modbus协议，而<strong>RS-485标准</strong>并没有规定应用层通信协议。</p><p>RS485协议规定（线A、B间电压差）：</p><p><span style="color:green"><strong>逻辑1：+2V ~ +6V</strong></span></p><p><span style="color:green"><strong>逻辑0：-6V ~ -2V</strong></span></p><p>很多收发器的标准达到甚至超过TIA/EIA-485A规范，在实际使用中，以器件的SPEC参数为主，如下某收发器的负输入阈值最小也是 <code>-200mV</code> 。</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/d03c9ce486984b2fa454be8a59606835.png" alt="" /><figcaption>在这里插入图片描述</figcaption></figure><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/1d5a4194976244ddbcac880dbe80e8f5.png" alt="" /><figcaption>在这里插入图片描述</figcaption></figure><h1 id="rs485拓扑结构">RS485拓扑结构</h1><p>RS485主要采用的是两线制接线方式，在同一总线上最多可以挂接32个节点。RS485支持多从机模式，不支持多主机模式。</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231026093304812.png" alt="" /><figcaption>image-20231026093304812</figcaption></figure><h1 id="rs485常用电路">RS485常用电路</h1><ul><li><strong>RS485一般应用</strong></li></ul><p>这种应用方案有很多，大部分都是类同如下设计：</p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231026094211229.png" alt="image-20231026094211229" style="zoom:80%;" /></p><ul><li><strong>RS485防雷应用</strong></li></ul><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231026095802733.png" alt="" /><figcaption>image-20231026095802733</figcaption></figure><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/640.jpeg" alt="" /><figcaption>图片</figcaption></figure><ul><li><p><strong>RS485高压隔离应用</strong></p><ul><li><p><strong>光耦</strong> <img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231026100250702.png" alt="image-20231026100250702" /></p></li><li><p><strong>专用RS485隔离芯片</strong> <img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231026100648487.png" alt="image-20231026100648487" /></p></li></ul></li><li><p><strong>RS485自动收发应用</strong></p><ul><li><strong>分立器件</strong></li></ul><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/d9524ee6bf62424f8b56f1989440748d.png" alt="" /><figcaption>img</figcaption></figure><p>原理分析如下：</p><p><span style="color:blue">发送过程：</span><strong>当USART_TX发送0时</strong>，三极管不导通，DE接高电平，进入发送模式，因为DI接地，所以<strong>AB引脚会传输0</strong>。<strong>当USART_TX发送1时</strong>，三极管导通，RE为低电平，进入接收模式，485芯片的AB引脚进入高阻状态，因为有上下拉电阻，所以<strong>AB传输的是1</strong>。一句话：<strong>TXD发1，AB就发1；TXD发0，AB就发0</strong></p><p><span style="color:blue">接收过程：</span>当<strong>USART_TX是高电平</strong>时，三极管导通，RE为低电平，485芯片进入接收状态，然后其RO引脚（也就是接USART_RX的引脚）就会接收AB传输过来的数据了。</p><ul><li><strong>自动切换方向芯片-MAX13487、MAX13488</strong></li></ul></li></ul><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/087ca55942604e7aa24e9f1db2a7229a.png" alt="" /><figcaption>img</figcaption></figure><h1 id="rs485应用常见问题">RS485应用常见问题</h1><p>RS485在应用中有时会出现问题，如干扰，终端电阻匹配问题等，具体可参考这篇文章：</p><p><a href="https://mp.weixin.qq.com/s/hObz69bggXqIsttAz1Wo2w">485总线应用及常见问题 (qq.com)</a></p><p><strong>参考链接：</strong></p><p><a href="https://blog.csdn.net/weixin_46251230/article/details/126684223?spm=1001.2101.3001.6650.14&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-14-126684223-blog-103917713.235%5Ev38%5Epc_relevant_default_base&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-14-126684223-blog-103917713.235%5Ev38%5Epc_relevant_default_base&amp;utm_relevant_index=22">【精选】RS-485接口协议详解_rs485_ONE_Day|的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_39400113/article/details/122387133">【精选】终于讲透了，史上最详细的RS485自动收发电路你一定要掌握-CSDN博客</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzI3MDQzOTUzMw==&amp;mid=2247510498&amp;idx=1&amp;sn=4cdfb6a6a3785730dc421f4e2d7cd9f7&amp;chksm=ead3ece0dda465f63f3d9d9bebe056fcb71ca380dbc27bfb4c201394675a8996c560c573da42&amp;scene=178&amp;cur_album_id=2499796242684952577#rd">大厂推荐：RS485接口电路如何设计？ (qq.com)</a></p><p><a href="https://mp.weixin.qq.com/s/uszrEinELLhIHucudf04kQ">为什么需要485隔离？常见RS485隔离方案介绍 (qq.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;RS485是工业自动化控制上最常用的半双工通信总线之一，它弥补了RS-232通信距离短，速率低的缺点，它的速率可高达&lt;strong&gt;10Mbit/s&lt;/strong&gt;，理论通讯距离可达&lt;strong&gt;1200米&lt;/strong&gt;；RS-485采用的是&lt;strong&gt;差分传输</summary>
      
    
    
    
    <category term="硬件" scheme="http://example.com/categories/%E7%A1%AC%E4%BB%B6/"/>
    
    
    <category term="RS485" scheme="http://example.com/tags/RS485/"/>
    
  </entry>
  
  <entry>
    <title>关于迪文串口屏驱动</title>
    <link href="http://example.com/2023/10/25/%E5%85%B3%E4%BA%8E%E8%BF%AA%E6%96%87%E4%B8%B2%E5%8F%A3%E5%B1%8F%E9%A9%B1%E5%8A%A8/"/>
    <id>http://example.com/2023/10/25/%E5%85%B3%E4%BA%8E%E8%BF%AA%E6%96%87%E4%B8%B2%E5%8F%A3%E5%B1%8F%E9%A9%B1%E5%8A%A8/</id>
    <published>2023-10-25T07:27:08.000Z</published>
    <updated>2023-10-25T12:47:22.590Z</updated>
    
    <content type="html"><![CDATA[<p>嵌入式系统开发中，我们会经常使用到串口屏，主要是因为串口屏使用起来比较简单，不需要花费大量的时间来编写底层实现逻辑代码，我们只需要根据它的协议通过串口进行数据的传输和显示就好了。串口屏在工业上有很多品牌，这里主要以迪文显示屏为例，来看看它的使用和驱动编写。</p><h1 id="dgus-屏的简介">DGUS 屏的简介</h1><p>迪文串口屏采用的是 <span style="color:blue">DGUS（<strong>D</strong>WIN <strong>G</strong>raphic <strong>U</strong>tilized <strong>S</strong>oftware）开发体系</span>，由 DGUS 屏和 DGUS 开发软件构成，如下所示：</p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231025164002877.png" /></p><p>DGUS 把 GUI（用户图形界面）的每一个页面分解成多个控件，用户需要实现某个功能只需要利用 PC 端的开发软件在相应的页面上添加功能控件即可实现。</p><p>使用上位机软件新建一个工程时，会自动生成一系列文件，这些文件包含了<strong>触控配置文件</strong>，<strong>变量配置文件</strong>，<strong>变量初始化文件</strong>，<strong>OS代码</strong>，<strong>图标库</strong>，<strong>屏幕参数配置文件</strong>。另外还需要准备一些界面图片。</p><h1 id="dgus-屏的存储空间">DGUS 屏的存储空间</h1><p>DGUS 屏提供有 <strong>FLASH储存空间、RAM储存空间、配置寄存器空间，以及曲线缓冲区</strong>。</p><ul><li><strong>FLASH储存空间（256MB/1GB/2GB）</strong></li></ul><p>FLASH 储存空间主要用于储存参数配置文件、图片文件、声音文件、字库文件、图标库、触控配置文件、变量配置文件、OS 代码、用户数据等。</p><p><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231025170212747.png" /></p><ul><li><strong>RAM储存空间（56KB）</strong></li></ul><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231025170249644.png" alt="" /><figcaption>image-20231025170249644</figcaption></figure><ul><li><strong>配置寄存器空间（256Byte）</strong></li></ul><p>用来存放寄存器状态的，比如 RTC（实时时间）、背光亮度等实时的状态。通过 DGUS 的串口指令改变各寄存器的值，可实现上位机与 DGUS 屏信息传输及控制。寄存器地址0x00~0xFF，部分寄存器如下所示：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231025172556583.png" alt="" /><figcaption>image-20231025172556583</figcaption></figure><ul><li><strong>曲线缓冲区（16KB）</strong></li></ul><p>缓冲区中可存储 8 条曲线趋势图。将数据按照 DGUS 指令格式发送至缓冲区中，即可快速实现曲线的显示。曲线缓冲区的数据都是 16 位无符号数。</p><h1 id="dgus-屏的串口通信">DGUS 屏的串口通信</h1><p>DGUS 屏采用串口（<strong>1 个起始位，8 个数据位，1 个停止位</strong>）通信，可采用 RS232 或 RS485 两种通信方式。串口波特率可通过 CONFIG 文件来配置。串口的所有指令或数据都是 16 进制（HEX）格式；对于字型（2 字节）数据，<strong>总是采用高字节先传送（MSB）方式</strong>，如 <code>0x1234</code> 先传送 <code>0x12</code>。</p><p>DGUS 屏采用变量驱动模式工作，屏的工作模式和 GUI 的状态完全由数据变量来控制。因此，<strong>串口指令也只需要对变量进行读、写即可</strong>，指令集非常简单，一共只有 <span style="color:green"><strong>5</strong></span> 条指令。如下所示：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231025153443743.png" alt="" /><figcaption>image-20231025153443743</figcaption></figure><p>一条完整的串口指令协议结构如下：</p><figure><img src="https://gitee.com/kayoungzhang/picgo_res/raw/master/img/image-20231025172028362.png" alt="" /><figcaption>image-20231025172028362</figcaption></figure><p>编程时遵循这种协议格式进行数据传输，就可以实现屏幕与MCU之间的正常沟通。</p><h1 id="dgus-屏的驱动实现">DGUS 屏的驱动实现</h1><p>根据以上的通信协议，写出如下几个函数：</p><div class="code-wrapper"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> DGUS_FRAME_HEAD1 (0x5a)                     <span class="hljs-comment">/* DGUS帧头1 */</span></span><span class="hljs-meta">#<span class="hljs-keyword">define</span> DGUS_FRAME_HEAD2 (0xa5)                     <span class="hljs-comment">/* DGUS帧头2 */</span></span><span class="hljs-class"><span class="hljs-keyword">enum</span> <span class="hljs-title">command</span></span><span class="hljs-class">&#123;</span>  CMD_REG_WRITE = <span class="hljs-number">0x80</span>,  <span class="hljs-comment">/* DGUS写寄存器指令 */</span>  CMD_REG_READ,          <span class="hljs-comment">/* DGUS读寄存器指令 */</span>  CMD_DATA_WRITE,        <span class="hljs-comment">/* DGUS写数据指令 */</span>  CMD_DATA_READ,         <span class="hljs-comment">/* DGUS读数据指令 */</span>  CMD_CURVE_WRITE        <span class="hljs-comment">/* DGUS写曲线指令 */</span>&#125;;<span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">dgus_reg_write</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> reg_addr, <span class="hljs-type">uint8_t</span> *p_tx_data, <span class="hljs-type">uint16_t</span> length)</span>;<span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">dgus_reg_read</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> reg_addr, <span class="hljs-type">uint8_t</span> length)</span>;<span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">dgus_data_write</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> addr, <span class="hljs-type">uint8_t</span> *p_tx_data, <span class="hljs-type">uint16_t</span> length)</span>;<span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">dgus_data_read</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> addr,<span class="hljs-type">uint8_t</span> length)</span>;<span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">dgus_curve_write</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> *p_tx_data, <span class="hljs-type">uint16_t</span> length, <span class="hljs-type">uint8_t</span> ch_mode)</span>;</code></pre></div><div class="code-wrapper"><pre><code class="hljs c"><span class="hljs-comment">/**</span><span class="hljs-comment">  * @breif dgus通过串口发送数据</span><span class="hljs-comment">  * @param p_tx_data 数据指针</span><span class="hljs-comment">  * @param size 数据长度</span><span class="hljs-comment">  * @retval none</span><span class="hljs-comment">  */</span><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title function_">dgus_send_data</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> *p_tx_data, <span class="hljs-type">uint16_t</span> size)</span>&#123;  HAL_UART_Transmit(&amp;huart2, p_tx_data, size, <span class="hljs-number">1000</span>);<span class="hljs-keyword">while</span>(HAL_UART_GetState(&amp;huart2， UART_FLAG_TC) != SET);&#125;<span class="hljs-comment">/**</span><span class="hljs-comment">  * @breif CRC16数据校验</span><span class="hljs-comment">  * @param buf 数据缓存指针</span><span class="hljs-comment">  * @param length 数据长度</span><span class="hljs-comment">  * @retval crc16 校验值</span><span class="hljs-comment">  */</span><span class="hljs-type">static</span> <span class="hljs-type">uint16_t</span> <span class="hljs-title function_">CalcDwinCRC16</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> *buf,<span class="hljs-type">uint16_t</span> length)</span>&#123;  <span class="hljs-type">uint16_t</span> crc16,data,val;   crc16 = <span class="hljs-number">0x0000</span>;   <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;length;i++)  &#123;    <span class="hljs-keyword">if</span>((i % <span class="hljs-number">8</span>) == <span class="hljs-number">0</span>)    &#123;      data = (*buf++)&lt;&lt;<span class="hljs-number">8</span>;     &#125;    val = crc16 ^ data;    crc16 = crc16&lt;&lt;<span class="hljs-number">1</span>;    data = data &lt;&lt;<span class="hljs-number">1</span>;    <span class="hljs-keyword">if</span>(val&amp;<span class="hljs-number">0x8000</span>)    &#123;      crc16 = crc16 ^ <span class="hljs-number">0x8005</span>;    &#125;  &#125;  <span class="hljs-keyword">return</span> crc16;&#125;<span class="hljs-comment">/**</span><span class="hljs-comment">  * @breif 向DGUS屏寄存器写入数据</span><span class="hljs-comment">  * @param reg_addr 寄存器地址</span><span class="hljs-comment">  * @param p_tx_data 写入数据的指针</span><span class="hljs-comment">  * @param length 写入的数据长度</span><span class="hljs-comment">  * @retval none.</span><span class="hljs-comment">  */</span><span class="hljs-type">void</span> <span class="hljs-title function_">dgus_reg_write</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> reg_addr, <span class="hljs-type">uint8_t</span> *p_tx_data, <span class="hljs-type">uint16_t</span> length)</span>&#123;  <span class="hljs-type">uint8_t</span> frame_Reg_Write[<span class="hljs-number">20</span>];  frame_Reg_Write[<span class="hljs-number">0</span>] = DGUS_FRAME_HEAD1;  frame_Reg_Write[<span class="hljs-number">1</span>] = DGUS_FRAME_HEAD2;  frame_Reg_Write[<span class="hljs-number">2</span>] = (<span class="hljs-type">uint8_t</span>)(length+<span class="hljs-number">4</span>);  frame_Reg_Write[<span class="hljs-number">3</span>] = CMD_REG_WRITE;  frame_Reg_Write[<span class="hljs-number">4</span>] = reg_addr;  <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; length; i++)  &#123;    frame_Reg_Write[<span class="hljs-number">5</span>+i] = p_tx_data[i];  &#125;  <span class="hljs-type">uint16_t</span> checkCode=CalcDwinCRC16(&amp;frame_Reg_Write[<span class="hljs-number">3</span>]，length+<span class="hljs-number">2</span>);  frame_Reg_Write[length+<span class="hljs-number">5</span>]=(<span class="hljs-type">uint8_t</span>)checkCode; <span class="hljs-comment">//数组中高字节在后</span>  frame_Reg_Write[length+<span class="hljs-number">6</span>]=(<span class="hljs-type">uint8_t</span>)(checkCode&gt;&gt;<span class="hljs-number">8</span>);      dgus_send_data(frame_Reg_Write，(length+<span class="hljs-number">7</span>));&#125;<span class="hljs-comment">/**</span><span class="hljs-comment">  * @breif 读DGUS屏寄存器数据</span><span class="hljs-comment">  * @param reg_addr 寄存器地址</span><span class="hljs-comment">  * @param length 读取的数据长度</span><span class="hljs-comment">  * @retval none.</span><span class="hljs-comment">  */</span><span class="hljs-type">void</span> <span class="hljs-title function_">dgus_reg_read</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> reg_addr, <span class="hljs-type">uint8_t</span> length)</span>&#123;  <span class="hljs-type">uint8_t</span> frame_Reg_Read[<span class="hljs-number">20</span>];<span class="hljs-comment">//读数据命令</span>  frame_Reg_Read[<span class="hljs-number">0</span>] = DGUS_FRAME_HEAD1;  frame_Reg_Read[<span class="hljs-number">1</span>] = DGUS_FRAME_HEAD2;  frame_Reg_Read[<span class="hljs-number">2</span>] = (<span class="hljs-type">uint8_t</span>)(length+<span class="hljs-number">5</span>);  frame_Reg_Read[<span class="hljs-number">3</span>] = CMD_REG_READ;  frame_Reg_Read[<span class="hljs-number">4</span>] = reg_addr;  frame_Reg_Read[<span class="hljs-number">5</span>] = length;  <span class="hljs-type">uint16_t</span> checkCode=CalcDwinCRC16(&amp;frame_Reg_Read[<span class="hljs-number">3</span>],<span class="hljs-number">3</span>);  frame_Reg_Read[<span class="hljs-number">6</span>]=(<span class="hljs-type">uint8_t</span>)checkCode;  frame_Reg_Read[<span class="hljs-number">7</span>]=(<span class="hljs-type">uint8_t</span>)(checkCode&gt;&gt;<span class="hljs-number">8</span>);  dgus_send_data(frame_Reg_Read,<span class="hljs-number">0x08</span>);&#125;<span class="hljs-comment">/**</span><span class="hljs-comment">  * @breif 向DGUS屏变量存储器写数据</span><span class="hljs-comment">  * @param addr 变量存储器地址</span><span class="hljs-comment">  * @param p_tx_data 数据指针</span><span class="hljs-comment">  * @param length 写入的数据长度</span><span class="hljs-comment">  * @retval none.</span><span class="hljs-comment">  * @note 一次最多允许写47个字，即length&lt;=94</span><span class="hljs-comment">  */</span><span class="hljs-type">void</span> <span class="hljs-title function_">dgus_data_write</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> addr, <span class="hljs-type">uint8_t</span> *p_tx_data, <span class="hljs-type">uint16_t</span> length)</span>&#123;  <span class="hljs-type">uint8_t</span> frame_data_Write[<span class="hljs-number">102</span>];  frame_data_Write[<span class="hljs-number">0</span>] = DGUS_FRAME_HEAD1;  frame_data_Write[<span class="hljs-number">1</span>] = DGUS_FRAME_HEAD2;  frame_data_Write[<span class="hljs-number">2</span>] = (<span class="hljs-type">uint8_t</span>)(length+<span class="hljs-number">3</span>);  frame_data_Write[<span class="hljs-number">3</span>] = CMD_DATA_WRITE;  frame_data_Write[<span class="hljs-number">4</span>] = (<span class="hljs-type">uint8_t</span>)(addr&gt;&gt;<span class="hljs-number">8</span>);<span class="hljs-comment">//起始地址</span>  frame_data_Write[<span class="hljs-number">5</span>] = (<span class="hljs-type">uint8_t</span>)addr;<span class="hljs-comment">//起始地址</span>  <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; length; i++)  &#123;    frame_data_Write[<span class="hljs-number">6</span>+i] = p_tx_data[i];  &#125;  <span class="hljs-type">uint16_t</span> checkCode = CalcDwinCRC16(&amp;frame_data_Write[<span class="hljs-number">3</span>],length+<span class="hljs-number">3</span>);  frame_data_Write[length+<span class="hljs-number">6</span>] = (<span class="hljs-type">uint8_t</span>)checkCode;  frame_data_Write[length+<span class="hljs-number">7</span>] = (<span class="hljs-type">uint8_t</span>)(checkCode&gt;&gt;<span class="hljs-number">8</span>);  dgus_send_data(frame_data_Write,(length+<span class="hljs-number">8</span>));&#125;<span class="hljs-comment">/**</span><span class="hljs-comment">  * @breif 读DGUS屏变量存储器数据</span><span class="hljs-comment">  * @param addr 变量存储器地址</span><span class="hljs-comment">  * @param length 读取的数据长度</span><span class="hljs-comment">  * @retval none.</span><span class="hljs-comment">  */</span><span class="hljs-type">void</span> <span class="hljs-title function_">dgus_data_read</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> addr,<span class="hljs-type">uint8_t</span> length)</span>&#123;  <span class="hljs-type">uint8_t</span> frame_data_read[<span class="hljs-number">20</span>];<span class="hljs-comment">//读数据命令</span>  frame_data_read[<span class="hljs-number">0</span>] = DGUS_FRAME_HEAD1;  frame_data_read[<span class="hljs-number">1</span>] = DGUS_FRAME_HEAD2;  frame_data_read[<span class="hljs-number">2</span>] = <span class="hljs-number">0x04</span>;  frame_data_read[<span class="hljs-number">3</span>] = CMD_DATA_READ;  frame_data_read[<span class="hljs-number">4</span>] = (<span class="hljs-type">uint8_t</span>)(addr&gt;&gt;<span class="hljs-number">8</span>);<span class="hljs-comment">//起始地址</span>  frame_data_read[<span class="hljs-number">5</span>] = (<span class="hljs-type">uint8_t</span>)addr;<span class="hljs-comment">//起始地址</span>  frame_data_read[<span class="hljs-number">6</span>] = length;<span class="hljs-comment">//读取长度</span>    <span class="hljs-type">uint16_t</span> checkCode=CalcDwinCRC16(&amp;frame_data_read[<span class="hljs-number">3</span>],<span class="hljs-number">4</span>);  frame_data_read[<span class="hljs-number">7</span>]=(<span class="hljs-type">uint8_t</span>)checkCode;  frame_data_read[<span class="hljs-number">8</span>]=(<span class="hljs-type">uint8_t</span>)(checkCode&gt;&gt;<span class="hljs-number">8</span>);  dgus_send_data(frame_data_read,<span class="hljs-number">0x09</span>);&#125;<span class="hljs-comment">/**</span><span class="hljs-comment">  * @breif DGUS屏画曲线</span><span class="hljs-comment">  * @param p_tx_data 数据指针</span><span class="hljs-comment">  * @param length 数据长度</span><span class="hljs-comment">  * @param ch_mode 通道模式</span><span class="hljs-comment">  * @retval none.</span><span class="hljs-comment">  * @note 一次最多允许写8个字，即length&lt;=16</span><span class="hljs-comment">  */</span><span class="hljs-type">void</span> <span class="hljs-title function_">dgus_curve_write</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> *p_tx_data, <span class="hljs-type">uint16_t</span> length, <span class="hljs-type">uint8_t</span> ch_mode)</span>&#123;  <span class="hljs-type">uint8_t</span> frame_curve_Write[<span class="hljs-number">23</span>];<span class="hljs-comment">//写曲线缓冲区命令</span>  frame_curve_Write[<span class="hljs-number">0</span>] = DGUS_FRAME_HEAD1;  frame_curve_Write[<span class="hljs-number">1</span>] = DGUS_FRAME_HEAD2;  frame_curve_Write[<span class="hljs-number">2</span>] = (<span class="hljs-type">uint8_t</span>)(length+<span class="hljs-number">2</span>);  frame_curve_Write[<span class="hljs-number">3</span>] = CMD_CURVE_WRITE;  frame_curve_Write[<span class="hljs-number">4</span>] = ch_mode;  <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; length; i++)  &#123;    frame_curve_Write[<span class="hljs-number">5</span>+i] = p_tx_data[i];  &#125;  <span class="hljs-type">uint16_t</span> checkCode=CalcDwinCRC16(&amp;frame_curve_Write[<span class="hljs-number">3</span>],length+<span class="hljs-number">2</span>);  frame_curve_Write[length+<span class="hljs-number">5</span>]=(<span class="hljs-type">uint8_t</span>)checkCode;  frame_curve_Write[length+<span class="hljs-number">6</span>]=(<span class="hljs-type">uint8_t</span>)(checkCode&gt;&gt;<span class="hljs-number">8</span>);  dgus_send_data(frame_curve_Write,length+<span class="hljs-number">7</span>);&#125;</code></pre></div><p>根据需求，在上层应用中调用以上API函数，即可实现屏幕与MCU的通信。</p><p><strong>参考链接：</strong></p><p><a href="https://blog.csdn.net/foxclever/article/details/121734689">【精选】外设驱动库开发笔记35：迪文触摸屏驱动_迪文k600+触摸校准-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;嵌入式系统开发中，我们会经常使用到串口屏，主要是因为串口屏使用起来比较简单，不需要花费大量的时间来编写底层实现逻辑代码，我们只需要根据它的协议通过串口进行数据的传输和显示就好了。串口屏在工业上有很多品牌，这里主要以迪文显示屏为例，来看看它的使用和驱动编写。&lt;/p&gt;
&lt;h1</summary>
      
    
    
    
    <category term="单片机" scheme="http://example.com/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="串口屏" scheme="http://example.com/tags/%E4%B8%B2%E5%8F%A3%E5%B1%8F/"/>
    
  </entry>
  
  <entry>
    <title>阅读摘录</title>
    <link href="http://example.com/2023/10/22/%E9%98%85%E8%AF%BB%E6%91%98%E5%BD%95/"/>
    <id>http://example.com/2023/10/22/%E9%98%85%E8%AF%BB%E6%91%98%E5%BD%95/</id>
    <published>2023-10-22T14:23:41.000Z</published>
    <updated>2023-10-23T08:38:41.109Z</updated>
    
    <content type="html"><![CDATA[<p>这两天在整理之前收录的文章，读到了一篇关于阅读意义的文章，觉得写的挺好，摘录如下：</p><ul><li><p>“<strong>我这辈子遇到的聪明人，来自各行各业的聪明人，没有不每天阅读的。没有，一个都没有。--------查理·芒格</strong>”</p></li><li><p><strong>一个人的成长，一个人的自我突破过程，很大程度上就是他的阅读史。</strong>所以我们才有了这样一句话：你的气质里，藏着你走过的路，读过的书，爱过的人。</p></li><li><p><strong><span style="color:green">几乎所有领导者都是通过读书打开了自我，从而有了自己清晰的人生目标与追求。</span></strong></p></li><li><p>读书的好处，是可以让我们跳出此时此地的限制，穿透一时一地的迷雾，从更大的格局和更长远的眼光来把握眼前的各种扰动，从而把不解和不安化成豁然开朗和淡定从容，最后养成战略上的定力。</p></li><li><p>好的书，提供的是在无数人的经验教训的基础之上总结出来的规律和原则，让人可以更好、更快地理解自己和所处的这个世界，以及背后的行为逻辑。</p></li><li><p><strong>使命是做什么，思想是怎么做。这都是领导力的核心，而这些都离不开读书。</strong></p></li><li><p>读经典，就是在跟大师对话。这是提高自己思维水平的最有效途径。</p></li><li><p><strong>读书一定要带着问题意识。</strong>最好的读书是联系实际来读书，善于把书本中的普遍规律与我们的具体实践结合起来。</p></li><li><p>高管需要的是理念，是思想，而基层需要的是解决具体问题的操作性方法。所以读书一定要分层级。就像共产党那样，从毛泽东的思想，到林彪的战术理念，到士兵的具体打法，一步步落地。</p></li></ul><p><strong>原文</strong>：<a href="https://mp.weixin.qq.com/s/p4OUvyx8edUlc1JyUFQUTA">为什么管理者必须要大量阅读？</a></p><p><strong>管理类书籍推荐：</strong></p><p><span style="color:blue">《乔布斯传》《从优秀到卓越》《创新者的窘境》《影响力》《卓有成效的管理者》《裂变》《穷查理宝典》《大赛车》《傻瓜理财指南》 《创业维艰》《精益创业》《从0到1》 《人性的优势》《献给经理人的一本书》《团队合作的五大障碍》《认识商业》《逃不开的经济周期》《失控》《思考，快与慢》《黑天鹅》《洞见》《基业长青》《滚雪球》吴军的《态度》《见识》《富足》《格局》《原则》</span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这两天在整理之前收录的文章，读到了一篇关于阅读意义的文章，觉得写的挺好，摘录如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;“&lt;strong&gt;我这辈子遇到的聪明人，来自各行各业的聪明人，没有不每天阅读的。没有，一个都没有。--------查理·芒格&lt;/strong&gt;”&lt;/p&gt;&lt;</summary>
      
    
    
    
    <category term="其它" scheme="http://example.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
</feed>
